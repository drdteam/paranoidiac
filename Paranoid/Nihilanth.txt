class HLNihilanth : HLMonster
{
	override void HLModelSetup()
	{
		static const name modelskin[] =
		{
			'nihilanth_000.png',
			'nihilanth_001.png',
			'nihilanth_002.png',
			'nihilanth_003.png',
			'nihilanth_004.png',
			'nihilanth_005.png',
			'nihilanth_006.png',
			'nihilanth_007.png',
			'nihilanth_008.png',
			'nihilanth_009.png',
			'nihilanth_010.png',
			'nihilanth_011.png'
		};
		for(int i = 0; i <= 11; i++)
			A_ChangeModel("", 0, "Models", "nihilanth.iqm", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	bool awake, mode;
	int countdown;
	override void tick()
	{
		if(awake)
		{
			if(countdown)
				countdown--;
			else
			{
				countdown = 35 * 12;
				A_StartSound("halflife/monsters/nihilant/idle_sight", CHAN_7, attenuation:ATTN_NONE);
			}
		}
		else if(health <= 0)
		{
			countdown++;
			if(countdown == 4 || countdown == 8 || countdown == 12)
			{
				A_SpawnItemEx("NihDeathFX1", 0, 0, 100, random(-2, 2), random(-2, 2), random(2, 6), random(0, 359));
				A_SpawnItemEx("NihDeathFX2", 0, 0, 100, random(-2, 2), random(-2, 2), random(2, 6), random(0, 359));
				A_FadeOut(.01);
			}
			if(countdown >= 12)
			{
				A_SpawnItemEx("NihDeathFX3", random(60, -60), random(60, -60), random(20, 130));
				countdown = 0;
			}
		}
		super.tick();
	}
	Default
	{
		Scale .25;
		Health 4000;
		Mass 0x7FFFFFFF;
		+FLOAT
		+NOGRAVITY
		Speed 2;
		FloatSpeed 1.333333;
		Height 200;
		Radius 80;
		+BOSS
		DamageFactor "Normal", .1;
		DamageFactor "NihDamage", 1;
		BloodColor "Yellow";
		PainSound "nihilant/pain";
		DeathSound "nihilant/death";
		Species "Xen";
	}
	States
	{
	Spawn:
		HLI1 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 4 A_Look;
		HLI2 AB 4 A_Look;
		Loop;
	See:
		HLI1 A 0 {awake = 1;}
		HLI1 AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSSTTTTUUUUVVVVWWWWXXXXYYYYZZZZ[[[[\\\\]]]] 1 A_Chase;
		HLI2 AAAABBBB 1 A_Chase;
		Goto See+1;
	Missile:
		HLA1 A 0
		{
			A_Stop();
			A_StartSound("nihilant/attackrandom", CHAN_6);
			if(random(0, 255) < 100)
				return resolvestate("Vulnerable");
			return state(null);
		}
		HLA1 ABCDEFGHIJKLMNOP 1 A_FaceTarget;
		HLA1 QRSTUVWXYZ[\] 2 A_FaceTarget;
		HLA2 ABCD 2 A_FaceTarget;
		HLA2 E 1
		{
			if(random(0, 1))
				return resolvestate("Missile2");
			A_SpawnProjectile("NihThunderBall", 40);
			return state(null);
		}
	MissileFin:
		HLA2 FGHIJKLMNOPQRSTUV 1;
		Goto See+1;
	Missile2:		//shower
		HLA2 EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE 4
		{
			A_StartSound("halflife/weapons/shockroachdischarge", CHAN_5);
			for(int i = 0; i < 2; i++)
			{
				A_SpawnProjectile("NihFireballSmallNoSound", random(30, 80), random(20, -20), random(-5, 5));
				A_SpawnProjectile("NihFireballSmall", random(30, 80), random(20, -20), random(-5, 5));
			}
			A_FaceTarget();
		}
		Goto MissileFin;
	Vulnerable:
		HLA2 WXYZ[\] 1 A_FaceTarget;
		HLA3 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1 A_FaceTarget;
		HLA4 A 0
		{
			mode = random(0, 1);
			A_SpawnItemEx("NihilantVulFX", 10, 0, 110, flags:SXF_SETMASTER);
			A_SpawnItemEx("NihilantVulFX", -10, 0, 110, flags:SXF_SETMASTER);
			A_SpawnItemEx("NihilantVulFX", 0, 10, 110, flags:SXF_SETMASTER);
			A_SpawnItemEx("NihilantVulFX", 0, -10, 110, flags:SXF_SETMASTER);
			A_SpawnItemEx("NihilantVul", 0, 0, 80, flags: SXF_SETMASTER|SXF_NOCHECKPOSITION);
			if(!mode)
				A_NihProj("NihProjFake");
		}
		HLA4 ABCDEFGHIJKLMNOPQRSTU 1 A_FaceTarget;
		HLA4 V 0
		{
			if(!mode)
				A_NihProj("NihProjStrong");
			else
			{
				A_SpawnProjectile("NihMonsterSpawner", 60, 0, 60);
				A_SpawnProjectile("NihMonsterSpawner", 60, 0, -60);
				A_SpawnProjectile("NihMonsterSpawner", 60);
			}
		}
		HLA4 VWXYZ[\] 5 A_FaceTarget;
		HLA5 ABCDEF 5 A_FaceTarget;
		Goto See+1;
	Death:
		TNT1 A 0
		{
			awake = 0;
			countdown = 0;
			A_StopSound(7);
			A_Scream();
			A_NoBlocking();
		}
		HLD1 ABCDEFGHIJ 7;
		Goto Death+1;
	}
	void A_NihProj(class<actor> proj)
	{
		A_SpawnProjectile(proj, 60, -45);
		A_SpawnProjectile(proj, 50, -30);
		A_SpawnProjectile(proj, 40, -15);
		A_SpawnProjectile(proj, 60, 45);
		A_SpawnProjectile(proj, 50, 30);
		A_SpawnProjectile(proj, 40, 15);
	}
}

//************************************************
class NihilantVul : Actor
{
	int PainCounter;
	Default
	{
		Monster;
		-COUNTKILL
		//-Solid	//i removed it to make nihilant get stuck, in that way he wont move, not even with the arc of death
		+NOGRAVITY
		+DONTFALL
		-SHOOTABLE
		+NONSHOOTABLE
		Mass 0x7FFFFFFF;
		Health 2000;
		Radius 50;
		Height 56;
		PainChance 255;
		DamageFactor "Railgun", .6;
		DamageFactor "BFGSplash", .5;
		DamageFactor "Normal", 1.5;
		BloodColor "Green";
	}
	States
	{
	Spawn:
		TNT1 A 10;
		TNT1 A 40 A_SetShootable;
		Stop;
	Pain:
		TNT1 A 2
		{
			if(PainCounter >= 8)
				bNOPAIN = 1;
			PainCounter++;
		}
	Death:
		TNT1 A 1
		{
			A_UnSetShootable();
			if(health < 0)
				health = 0;
			master.A_Pain();
			A_DamageMaster(2000-health, "NihDamage");
		}
		Stop;
	}
}

class NihilantVulFX : Actor
{
	Default
	{
		Projectile;
		+NOGRAVITY
		+NOCLIP
		RenderStyle "Add";
		Alpha 0;
		Scale .9;
	}
	States
	{
	Spawn:
		X025 AABBCC 1 NODELAY A_FadeIn;
		X025 DEFGHIJKLMNOPQRSTUVWXY 2 Bright;
		X025 ABCDEFGHIJKLMNOPQRSTUVWXY 2 A_FadeOut(.05);
		Stop;
	}
}
//****************************************************
class NihDeathFX1 : Actor
{
	Default
	{
		Projectile;
		Speed 1;
		+NOCLIP
		Scale .3;
		RenderStyle "Add";
	}
	States
	{
	Spawn:
		X018 A 0;
		"####" ABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXYABCDEFGHIJKLMNOPQRSTUVWXY 2 Bright;
		"####" ABCDEFGHIJKLMNOPQRSTUVWXY 2 Bright A_FadeOut(.08);
		Stop;
	Death:
		TNT1 A 1;
		Stop;
	}
}

class NihDeathFX2 : NihDeathFX1
{
	States
	{
	Spawn:
		X016 A 0;
		Goto Super::Spawn+1;
	}
}

class NihDeathFX3 : NihDeathFX1
{
	Default
	{
		Speed 0;
		Scale 1;
		Alpha .8;
		SeeSound "halflife/weapons/explode2";
		TRANSLATION "112:127 = [155, 170, 120]:[18, 20, 8]";
	}
	States
	{
	Spawn:
		X019 ABCDEFGHIJ 3;
		X019 KLMNOPQRS 2 A_FadeOut(.2);
		Stop;
	}
}
//************************************************
class NihMonsterSpawner : Actor
{
	Default
	{
		Projectile;
		-NOGRAVITY
		Speed 10;
		Damage 20;
		Radius 25;
		RenderStyle "Add";
		Scale .5;
		Gravity .15;
	}
	States
	{
	Spawn:
		X018 ABCDEFGHIJKLMNOPQRSTUVWXY 2 Bright;
		Loop;
	Death:
		X010 A 0
		{
			bNOGRAVITY = 1;
			A_Stop();
			vel.z += 8;
			scale = (1, 1);
			A_StartSound("halflife/weapons/tport2");
		}
		X010 ABCDEFGHIJ 1 BRIGHT;
		X010 K 1 BRIGHT
		{
			if(random(0, 1))
				A_SpawnItemEx("HLController");
			else
				A_SpawnItemEx("HLVortigaunt");
		}
		X010 LMNOPQRSTUVWXY 1 Bright;
		Stop;
	}
}
//************************************************
class NihThunderBall : Actor
{
	Default
	{
		Projectile;
		Speed 28;
		Damage 30;
		Radius 8;
		Height 16;
		RenderStyle "Add";
		DeathSound "halflife/weapons/gausshit1";
	}
	States
	{
	Spawn:
		X024 AAABBBCCCD 1 Bright A_FadeIn;
		X024 D 2 Bright;
		X024 EFGHIJKABCD 3 Bright;
		Goto Spawn+10;
	Death:
		TNT1 A 0
		{
			for(int i = 0; i < 14; i++)
				A_SpawnItemEx("VoltShotParticle", 0, 0, 0, random(-4, 4), random(4, -4), random(4, -4));
			A_SpawnItemEx("NihThunderBallRailShooter");
		}
		Stop;
	}
}

class NihThunderBallRailShooter : Actor
{
	Default
	{
		MONSTER;
		Radius 1;
		Height 1;
		+NOGRAVITY
		+NOCLIP
		+LOOKALLAROUND
		MissileChanceMult 0.0625;
		-SOLID
		-SHOOTABLE
		-COUNTKILL
		MinMissileChance 0;
	}
    States
    {
    Spawn:
		TNT1 A 1 NODELAY A_Look;
	See:
		TNT1 A 0
		{
			A_Chase();
			A_FaceTarget();
			if(CheckIfCloser(target, 400))
				A_CustomRailgun(random(50, 110), 0, -1, "SkyBlue", 1, 10, 3);
		}
		Stop;
	}
}

//************************************************
class NihFireballSmall : ControllerFireball1{Default{Damage 6;}}
class NihFireballSmallNoSound : NihFireballSmall{Default{DeathSound "";}}
//************************************************
class NihProjStrong : Actor
{
	Default
	{
		Projectile;
		Speed 20;
		Damage 20;
		RenderStyle "Add";
		Scale .4;
		+SeekerMissile
		DeathSound "halflife/weapons/gausshit1";
	}
	States
	{
	Spawn:
		X024 ABCDEFGHIJK 3 Bright NODELAY
		{
			A_SpawnItemEx("VoltShotParticle", 0, 0, 0, random(-4, 15), random(4, -4), random(4, -4));
			A_SeekerMissile(8, 8);
		}
		Loop;
	Death:
		TNT1 AAAAAAAAAAAAAA 0 A_SpawnItemEx("VoltShotParticle", 0, 0, 0, random(-4, 4), random(4, -4), random(4, -4));
		TNT1 A 1;
		Stop;
	}
}

class NihProjFake : NihProjStrong
{
	Default
	{
		+NOCLIP
		Speed 0;
		Damage 0;
		Alpha 0;
	}
	States
	{
	Spawn:
		X024 ABCDEFGH 3 Bright NODELAY
		{
			for(int i = 0; i < 2; i++)
				A_SpawnItemEx("VoltShotParticle", 0, 0, 0, random(-4, 4), random(4, -4), random(4, -4));
			A_FadeIn(0.2);
		}
		Stop;
	}
}

class VoltShotParticle : Actor
{
	Default
	{
		Projectile;
		+NOCLIP
		Radius 1;
		+DONTBLAST
		Height 1;
		Scale .05;
		RenderStyle "Add";
		+NOINTERACTION
	}
	States
	{
	Spawn:
		X024 ABCDEFGHIJK 1 Bright A_SpawnItem("VSPTrail", 1);
		X027 P 0 A_Jump(180, 1);
		Loop;
		X024 ABCDEFGHIJK 1 Bright A_FadeOut;
		Wait;
	Death:
		TNT1 A 1;
		Stop;
	}
}

class VSPTrail : VoltShotParticle
{
	States
	{
	Spawn:
		X024 ABCDEFGHIJK 1 Bright A_FadeOut;
		Wait;
	}
}