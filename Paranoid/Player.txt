class RolfBellmer : PlayerPawn
{
	bool scientist,otis;
	Default
	{
		+NOSKIN
		Height 60;
		Player.DisplayName "Rolf Bellmer";
		Player.ViewHeight 56;
		Player.AttackZOffset 24;
		Player.WeaponSlot 1,"HLCrowbar";
		Player.WeaponSlot 2,"HLPistol","HLDesertEagle","HLMagnum";
		Player.WeaponSlot 3,"HLHornetGun","HLShotgun";
		Player.WeaponSlot 4,"HLXBow","HLAssaultRifle";
		Player.WeaponSlot 5,"HLRPG";
		Player.WeaponSlot 6,"HLGluonGun";
		Player.StartItem "HLCrowbar";
		Player.StartItem "HEVSuit";
		Player.Face "HEV";
		Player.Portrait "HLHELMET";
		BloodType "HLBlood";
	}
	States
	{
	Spawn:
		HLI1 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 2;
		HLI2 AB 2;
		Loop;
	See:
		HLR1 ABCDEFGHIJKLMNOPQRSTUVW 1;
		Loop;
	Missile:
		HLA1 YZ[\] 1;
		HLA2 AB 1;
		HLA1 VUTRSQPONMLKJIHGFEDCBA 1;
		Goto Spawn;
	Pain:
		HLP1 A 0 A_HLPainSelect;
		HLP1 A 1 A_HLHEVPain;
		HLP1 DGJMPSU 1;
		Goto Spawn;
	Pain.Drowning:
		HLP1 A 0 A_HLDrownPainSelect;
		HLP1 A 1 A_PlaySound("HLPlayerDrowning",6);
		HLP1 DGJMPSU 1;
		Goto Spawn;
	Death:
		HLD1 A 0 A_HLDeathSelect;
		HLD1 A 2
		{
			A_PlaySound("HLPlayerHEVFail",7);
			A_PlaySound("HLPlayerHEVFailBeep",6);
			A_NoBlocking();
		}
		HLD1 BCDEFG 2;
		HLD1 H 2 A_PlaySound("halflife/weapons/bodydrop");
		HLD1 IJKL 2;
		HLD1 M -1;
		Stop;

	ScientistSpawn:
		HLI2 CDEFGHIJKLMNOPQ 5;
		Loop;
	ScientistSee:
		HLW2 ABCDEFGHIJKLMNOP 2;
		Loop;
	ScientistMissile:
		HLI2 C 12;
		Goto ScientistSpawn;
	ScientistPain:
	ScientistPain.Drowning:
		HLP2 A 1 A_PlaySound("scientist/pain",CHAN_VOICE);
		HLP2 BCDEFGHI 1;
		Goto ScientistSpawn;
	ScientistDeath:
		HLD2 A 1 A_PlaySound("scientist/death",CHAN_VOICE);
		HLD2 BC 1;
		HLD2 D 1 A_NoBlocking;
		HLD2 EFGHIJKLMNOPQRS 1;
		HLD2 T 1 A_PlaySound("halflife/weapons/bodydrop");
		HLD2 UVW 1;
		HLD2 X -1;
		Stop;

	OtisSpawn:
		BSI1 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 2;
		BSI2 AB 2;
		Loop;
	OtisSee:
		BSR1 ABCDEFGHIJKLMNOPQRSTUVW 1;
		Loop;
	OtisMissile:
		BSA1 YZ[\] 1;
		BSA2 AB 1;
		BSA1 VUTRSQPONMLKJIHGFEDCBA 1;
		Goto OtisSpawn;
	OtisPain:
	OtisPain.Drowning:
		BSP1 A 1
		{
			if(random(0,3))
				A_PlaySound("halflife/monsters/otis/pain",CHAN_VOICE);
		}
		BSP1 DGJMPSU 1;
		Goto OtisSpawn;
	OtisDeath:
		BSD1 A 2
		{
			A_PlaySound("halflife/monsters/otis/death",CHAN_VOICE);
			A_NoBlocking();
		}
		BSD1 BCDEFG 2;
		BSD1 H 2 A_PlaySound("halflife/weapons/bodydrop");
		BSD1 IJKL 2;
		BSD1 M -1;
		Stop;

	FreemanSpawn:
		GFI1 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 2;
		GFI2 AB 2;
		Loop;
	FreemanSee:
		GFR1 ABCDEFGHIJKLMNOPQRSTUVW 1;
		Loop;
	FreemanMissile:
		GFA1 YZ[\] 1;
		GFA2 AB 1;
		GFA1 VUTRSQPONMLKJIHGFEDCBA 1;
		Goto FreemanSpawn;
	FreemanPain:
		GFP1 A 1 A_HLHEVPain;
		GFP1 DGJMPSU 1;
		Goto FreemanSpawn;
	FreemanPain.Drowning:
		HLP1 A 1 A_PlaySound("HLPlayerDrowning",6);
		HLP1 DGJMPSU 1;
		Goto FreemanSpawn;
	FreemanDeath:
		GFD1 A 2
		{
			A_PlaySound("HLPlayerHEVFail",7);
			A_PlaySound("HLPlayerHEVFailBeep",6);
			A_NoBlocking();
		}
		GFD1 BCDEFG 2;
		GFD1 H 2 A_PlaySound("halflife/weapons/bodydrop");
		GFD1 IJKL 2;
		GFD1 M -1;
		Stop;

	ShephardSpawn:
		OFI1 ABCDEFGHIJK 2;
		Loop;
	ShephardSee:
		OFR1 ABCDEFGHIJKLMNOPQRSTUVWXY 1;
		Loop;
	ShephardMissile:
		OFA2 \] 1;
		OFA3 ABCDEFGHIJK 1;
		Goto ShephardSpawn;
	ShephardPain:
	ShephardPain.Drowning:
		OFP1 ABCDEFGH 1;
		Goto ShephardSpawn;
	ShephardDeath:
		OFD1 A 1 A_NoBlocking;
		OFD1 BCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1;
		OFD2 A 1 A_PlaySound("halflife/weapons/bodydrop");
		OFD2 BCDEF 1;
		OFD2 G -1;
		Stop;

	BlackOpsSpawn:
		BOI1 ABCDEFGHIJK 2;
		Loop;
	BlackOpsSee:
		BOR1 ABCDEFGHIJKLMNOPQRSTUVWXY 1;
		Loop;
	BlackOpsMissile:
		BOA2 \] 1;
		BOA3 ABCDEFGHIJK 1;
		Goto BlackOpsSpawn;
	BlackOpsPain:
	BlackOpsPain.Drowning:
		BOP1 ABCDEFGH 1;
		Goto BlackOpsSpawn;
	BlackOpsDeath:
		BOD1 A 1 A_NoBlocking;
		BOD1 BCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1;
		BOD2 A 1 A_PlaySound("halflife/weapons/bodydrop");
		BOD2 BCDEF 1;
		BOD2 G -1;
		Stop;

	RoboSpawn:
		ROI1 ABCDEFGHIJK 2;
		Loop;
	RoboSee:
		ROR1 ABCDEFGHIJKLMNOPQRSTUVWXY 1;
		Loop;
	RoboMissile:
		ROA2 \] 1;
		ROA3 ABCDEFGHIJK 1;
		Goto RoboSpawn;
	RoboPain:
	RoboPain.Drowning:
		ROP1 ABCDEFGH 1;
		Goto RoboSpawn;
	RoboDeath:
		ROD1 A 1 A_NoBlocking;
		ROD1 BCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1;
		ROD2 A 1 A_PlaySound("halflife/weapons/bodydrop");
		ROD2 BCDEF 1;
		ROD2 G -1;
		Stop;

	IvanSpawn:
		IVI1 A 1;
		Loop;
	IvanSee:
		IVR1 ABCDEFGHIJKLMNOPQRST 1;
		Loop;
	IvanMissile:
		IVA1 ABCDEFGHIJKLM 1;
		Goto IvanSpawn;
	IvanPain:
	IvanPain.Drowning:
		IVP1 ABCDEFGHIJKL 1;
		Goto IvanSpawn;
	IvanDeath:
		IVD1 A 1 A_NoBlocking;
		IVD1 BCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1;
		IVD2 A 1 A_PlaySound("halflife/weapons/bodydrop");
		IVD2 BCDEFGHIJK 1;
		IVD2 L -1;
		Stop;
	}
	ParanoidWeapon LastWeapon;
	override void Tick()
	{
		if(InSpawnState())
			HLSetState('Spawn');
		super.tick();
		if(!player || !player.mo || player.mo != self)
			return;
		if(waterlevel>=3){
			let Weap = ParanoidWeapon(player.ReadyWeapon);
			if(Weap && !Weap.UnderwaterWeapon){
				for(let w = Inv; w != null; w = w.Inv)
				{
					let ActualWeapon = ParanoidWeapon(w);
					if(ActualWeapon && ActualWeapon.UnderwaterWeapon && ActualWeapon!=LastWeapon)
					{
						player.PendingWeapon=ActualWeapon;
						return;
					}
				}
			}
			LastWeapon = ParanoidWeapon(player.ReadyWeapon);
		}
	}
	override void PlayIdle()
	{
		if(InSeeState())
			HLSetState("Spawn");
	}
	override void PlayRunning()
	{
		if(InSpawnState())
			HLSetState("See");
	}
	override void PlayAttacking()
		{HLSetState("Missile");}
	void A_HLPainSelect()
		{HLSetState("Pain");}
	void A_HLDrownPainSelect()
		{HLSetState("Pain.Drowning");}
	void A_HLDeathSelect()
		{HLSetState("Death");}
	void A_HLHEVPain()
	{
		A_Pain();
		if(!random(0,3))
		{
			if(health<25)
				A_PlaySound("HLPlayerPain25",7);
			else if(health<50)
				A_PlaySound("HLPlayerPain50",7);
			else if(health<75)
				A_PlaySound("HLPlayerPain75",7);
		}
	}
	static const name HLskin[]={'Helmet','Freeman','Shephard','BlackOps','Robo','Ivan'};
	static const statelabel BaseStates[]={"Spawn","See","Missile","Pain","Pain.Drowning","Death"};
	static const statelabel OtisStates[]={"OtisSpawn","OtisSee","OtisMissile","OtisPain","OtisPain.Drowning","OtisDeath"};
	static const statelabel ScientistStates[]={"ScientistSpawn","ScientistSee","ScientistMissile","ScientistPain","ScientistPain.Drowning","ScientistDeath"};
	static const statelabel FreemanStates[]={"FreemanSpawn","FreemanSee","FreemanMissile","FreemanPain","FreemanPain.Drowning","FreemanDeath"};
	static const statelabel ShephardStates[]={"ShephardSpawn","ShephardSee","ShephardMissile","ShephardPain","ShephardPain.Drowning","ShephardDeath"};
	static const statelabel BlackOpsStates[]={"BlackOpsSpawn","BlackOpsSee","BlackOpsMissile","BlackOpsPain","BlackOpsPain.Drowning","BlackOpsDeath"};
	static const statelabel RoboStates[]={"RoboSpawn","RoboSee","RoboMissile","RoboPain","RoboPain.Drowning","RoboDeath"};
	static const statelabel IvanStates[]={"IvanSpawn","IvanSee","IvanMissile","IvanPain","IvanPain.Drowning","IvanDeath"};
	private void HLSetState(name statetype)
	{
		int mode,skinnum=CVar.GetCVar("v_multiskin",player).GetInt();
		statelabel stlabel;
		switch(statetype)
		{
		case 'Spawn':			mode=0;break;
		case 'See':				mode=1;break;
		case 'Missile':			mode=2;break;
		case 'Pain':			mode=3;break;
		case 'Pain.Drowning':	mode=4;break;
		case 'Death':			mode=5;break;
		}
		if(otis)
			stlabel=OtisStates[mode];
		else if(skinnum)//&&multiplayer)
		{
			switch(skinnum)
			{
			case 1:	stlabel=FreemanStates[mode];break;
			case 2:	stlabel=ShephardStates[mode];break;
			case 3:	stlabel=BlackOpsStates[mode];break;
			case 4:	stlabel=RoboStates[mode];break;
			case 5:	stlabel=IvanStates[mode];break;
			}
		}
		else if(scientist)
			stlabel=ScientistStates[mode];
		else
			stlabel=BaseStates[mode];
		if(!InStateSequence(CurState,FindState(stlabel)))
			SetStateLabel(stlabel);
	}
	bool InSpawnState()
	{
		if(InStateSequence(CurState,FindState("Spawn"))||
		InStateSequence(CurState,FindState("ScientistSpawn"))||
		InStateSequence(CurState,FindState("OtisSpawn"))||
		InStateSequence(CurState,FindState("FreemanSpawn"))||
		InStateSequence(CurState,FindState("ShephardSpawn"))||
		InStateSequence(CurState,FindState("BlackOpsSpawn"))||
		InStateSequence(CurState,FindState("RoboSpawn"))||
		InStateSequence(CurState,FindState("IvanSpawn")))
			return 1;
		return 0;
	}
	bool InSeeState()
	{
		if(InStateSequence(CurState,FindState("See"))||
		InStateSequence(CurState,FindState("ScientistSee"))||
		InStateSequence(CurState,FindState("OtisSee"))||
		InStateSequence(CurState,FindState("FreemanSee"))||
		InStateSequence(CurState,FindState("ShephardSee"))||
		InStateSequence(CurState,FindState("BlackOpsSee"))||
		InStateSequence(CurState,FindState("RoboSee"))||
		InStateSequence(CurState,FindState("IvanSee")))
			return 1;
		return 0;
	}
}