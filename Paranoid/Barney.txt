//=========
// Barney
//=========

class HLBarney : HLMonster
{
	const BARNEYFRIENDDIST = 192.0;
	bool guard;
	actor bestfriend;
	string hiredsound, firedsound, abandonedsound;
	Property HiredSound:hiredsound;
	Property FiredSound:firedsound;
	Property AbandonedSound:abandonedsound;
	override void HLModelSetup()
	{
		static const name modelskin[] =
		{
			'barney_000.png',
			'barney_001.png',
			'barney_002.png',
			'barney_003.png',
			'barney_004.png',
			'barney_005.png',
			'barney_006.png',
			'barney_007.png',
			'barney_008.png',
			'v_9mmhandgun_main_002.png'
		};
		string modelname = "barney.iqm";
		if(guard)
			modelname = "barney_holstered.iqm";
		for(int i = 0; i <= 9; i++)
			A_ChangeModel("HLBarney", 0, "Models", modelname, i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	Default
	{
		Health 150;
		Speed 4;
		Height 63;
		PainChance 128;
		PainChance "Crowbar", 252;
		SeeSound "halflife/monsters/barney/idle";
		PainSound "halflife/monsters/barney/pain";
		DeathSound "halflife/monsters/barney/death";
		MaxDropoffHeight 64;
		DropItem "HLPistol";
		+FRIENDLY
		-COUNTKILL
		Species "BlackMesa";
		HLBarney.HiredSound "barney/hired";
		HLBarney.FiredSound "barney/fired";
		HLBarney.AbandonedSound "barney/abandoned";
	}
	States
	{
	Spawn:
		HLI1 AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]] 1 A_HLBarneyLook;
		HLI2 AABB 1 A_HLBarneyLook;
		Loop;
	Spawn2:
		HLI2 CCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]] 1 A_HLBarneyLook;
		HLI3 AABBCCDD 1 A_HLBarneyLook;
		Loop;
	Guard:
		HLI3 E 2 A_HLBarneyLook;
		HLI3 FGHIJKLMNOPQRSTUVWXYZ[\] 2 A_HLBarneyLook;
		HLI4 ABCDEF 2 A_HLBarneyLook;
		Loop;
	See:
		HLR1 ABCDEFGHIJKLMNOPQRSTUVW 1 A_HLBarneyChase;
		HLR1 A 0 A_Chatter;
		Loop;
	Missile:
		HLA1 ABCDEFGHIJKLMNOPQRSTUV 1 A_FaceTarget;
	Pistol:
		HLA1 WX 1 A_FaceTarget;
		HLA1 Y 1 Light("ImShootingAGun") A_BarneyGunshot;
		HLA1 Z[\] 1 Light("ImShootingAGun") A_FaceTarget;
		HLA2 AB 1 A_FaceTarget;
		HLA1 VVVV 1 A_FaceTarget;
		TNT1 A 0 A_MonsterRefire(0, "See");
		Loop;
	Pain:
		HLP1 A 1 A_Pain;
		HLP1 DGJMPSU 1;
		HLP1 U 0 A_JumpIf(guard, "Guard");
		Goto See;
	Death:
		HLD1 A 2
		{
			for(int i = 8; i <= 9; i++)
				A_ChangeModel("HLBarney", 0, "Models", "barney.iqm", i, "Models", 'nochrome.png', CMDL_USESURFACESKIN);
			A_ScreamAndUnblock();
		}
		HLD1 BCDEFG 2;
		HLD1 H 2 A_StartSound("halflife/weapons/bodydrop");
		HLD1 IJKL 2;
		HLD1 M -1;
		Stop;
	XDeath:
	Crush:
		TNT1 A 0 A_HLGibs;
		Stop;
	}
	virtual void A_BarneyGunshot()
	{
		A_FaceTarget();
		A_BarneyGunsmoke();
		A_StartSound("halflife/weapons/pistol", CHAN_WEAPON);
		A_CustomBulletAttack(7, 7, 1, 5, "NewPuff1");
	}
	void A_BarneyGunsmoke()
	{
		for(int i = 0; i < 2; i++)
			A_SpawnItemEx("GunSmoke", 28, 2, 47 * ModelHeightMul);
	}
	override bool Used(Actor user)
	{
		if(!health)
			return false;
		if(!user || !user.player)
			return false;
		if(bestfriend && bestfriend == user)
		{
			bestfriend = null;
			if(!target || target == BestFriend)
				A_StartSound(FiredSound, CHAN_VOICE, attenuation: 0.25);
		}
		else
		{
			bestfriend = user;
			if(!target || target == BestFriend)
				A_StartSound(HiredSound, CHAN_VOICE, attenuation: 0.25);
		}
		return true;
	}
	virtual void A_HLBarneyLook()
	{
		//Guards are setpieces and should not normally seek targets, but they
		//will chase after goals, as in Sgt. Harrison's scripted scene
		if(guard)
		{
			if(goal)
				SetStateLabel("See");
			A_LookEx(LOF_NOSIGHTCHECK|LOF_NOSOUNDCHECK|LOF_NOSEESOUND);
			return;
		}

		/*if(TIDtoHate)
		{
			console.printf("I have a hatee");
			SetStateLabel("See");
		}
		else */
		//Look for enemies to target and chase
		if(!target)
		{
			LookExParams params;
			params.fov = 180;
			params.flags = 0;
			params.minDist = 0;
			params.maxDist = 1024;
			params.maxHearDist = 0;
			//This will also look for goals, which we may be manually setting to
			//the bestfriend
			bool success = LookForEnemies(false, params);
			if(success)
			{
				if(target != BestFriend)
					A_StartSound(SeeSound, CHAN_VOICE, CHANF_NOSTOP);
				SetStateLabel("See");
			}
		}
		//If no targets are seen, and he has a friend, he should run after that
		//friend unless he's already close
		if(bestfriend && Distance3D(bestfriend) > BARNEYFRIENDDIST)
			goal = bestfriend;
		CheckFriendshipEnd();
	}
	void CheckFriendshipEnd()
	{
		//If he has a friend but he got too far away, end the friendship
		if(bestfriend && Distance3D(bestfriend) > (BARNEYFRIENDDIST * 3.0))
		{
			if(goal == bestfriend)
				goal = null;
			if(!target || target == BestFriend)
				A_StartSound(AbandonedSound, CHAN_VOICE, attenuation: 0.25);
			bestfriend = null;
		}
	}
	void A_Chatter()
	{
		if(!guard && target && target != Bestfriend && !random(0, 32))
			A_StartSound(SeeSound, CHAN_VOICE, CHANF_NOSTOP);
	}
	virtual void A_HLBarneyChase()
	{
		//Guards are setpieces and should not normally seek targets, but they
		//will chase after goals, as in Sgt. Harrison's scripted scene
		if(guard)
		{
			if(!goal)
				SetStateLabel("Guard");
			A_Chase(null, null, CHF_NOPLAYACTIVE);
			return;
		}
		//If no targets are seen, and he doesn't have a friend, or he has a friend
		//but he's already close, he should stand still
		if(!target && (!bestfriend || Distance3D(bestfriend) <= BARNEYFRIENDDIST))
		{
			if(bestfriend)
				A_Face(bestfriend);
			if(random(0, 1))
				SetStateLabel("Spawn");
			else
				SetStateLabel("Spawn2");
			return;
		}
		CheckFriendshipEnd();
		A_HLChase();
	}
}

class HLOtis : HLBarney
{
	override void HLModelSetup()
	{
		static const name modelskin[] =
		{
			'otis_000.png',
			'otis_001.png',
			'otis_002.png',
			'v_desert_eagle_main_000.png',
			'otis_003.png',
			'otis_004.png',
			'barney_005.png',
			'otis_005.png',
			'otis_006.png',
			'otis_000.png'
		};
		string modelname = "otis.iqm";
		if(guard)
			modelname = "otis_holstered.iqm";
		for(int i = 0; i <= 9; i++)
			A_ChangeModel("HLBarney", 0, "Models", modelname, i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	Default
	{
		SeeSound "halflife/monsters/otis/idle";
		PainSound "halflife/monsters/otis/pain";
		DeathSound "halflife/monsters/otis/death";
		DropItem "HLDesertEagle";
		HLBarney.HiredSound "";
		HLBarney.FiredSound "";
		HLBarney.AbandonedSound "";
	}
	override void A_BarneyGunshot()
	{
		A_FaceTarget();
		A_BarneyGunsmoke();
		A_StartSound("halflife/weapons/deagleshot", CHAN_WEAPON);
		A_CustomBulletAttack(1, 1, 1, 18, "NewPuff1");
	}
}

class HLBarneyGuard : HLBarney
{
	override void BeginPlay()
	{
		guard = 1;
		SetStateLabel("guard");
		bUSESPECIAL = 1;
		super.BeginPlay();
	}
}

class HLOtisGuard : HLOtis
{
	override void BeginPlay()
	{
		guard = 1;
		SetStateLabel("guard");
		bUSESPECIAL = 1;
		super.BeginPlay();
	}
}

class SgtHarrison : HLBarneyGuard
{
	Default
	{
		-ISMONSTER
		-FRIENDLY
	}
}