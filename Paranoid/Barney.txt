//=========
// Barney
//=========

class TramBarney : RandomSpawner
{
	Default
	{
		+FRIENDLY
		DropItem "HLBarney";
	}
	override void PostSpawn(Actor spawned)
	{
		spawned.SetStateLabel("Tram");
		spawned.bNOCLIP=1;
	}
}

class HLBarney : HLMonster
{
	bool follower,guard;
	actor bestfriend;
	override void HLModelSetup()
	{
		static const name modelskin1[]=
		{
			'barney_body_000.png',
			'barney_body_001.png',
			'barney_body_002.png',
			'barney_body_003.png'
		};
		static const name modelskin2[]=
		{
			'barney_head_000.png',
			'barney_head_001.png',
			'barney_head_002.png',
			'barney_head_003.png'
		};

		for(int i = 0; i <= 3; i++)
		{
			A_ChangeModel("HLBarney", 0, "Models", "barney_body.iqm", i, "Models", modelskin1[i], CMDL_USESURFACESKIN);
			A_ChangeModel("HLBarney", 1, "Models", "barney_head.iqm", i, "Models", modelskin2[i], CMDL_USESURFACESKIN, 0);
		}

		ResetGunModel();
	}
	virtual void ResetGunModel(bool holster = false)
	{
		if(holster)
		{
			A_ChangeModel("HLBarney", 2, "Models", "barney_gun2.iqm", 2, "Models", "w_9mmhandgun.png");
		}
		else
		{
			A_ChangeModel("HLBarney", 2, "Models", "barney_gun1.iqm", 0, "Models", "w_9mmhandgun.png", CMDL_USESURFACESKIN, 0);
			A_ChangeModel("HLBarney", 2, "Models", "", 1, "Models", "v_9mmhandgun_main_002.png", CMDL_USESURFACESKIN);
		}
	}
	Default
	{
		Health 150;
		Speed 4;
		Height 63;
		PainChance 128;
		PainChance "Crowbar",252;
		SeeSound "halflife/monsters/barney/idle";
		PainSound "halflife/monsters/barney/pain";
		DeathSound "halflife/monsters/barney/death";
		MaxDropoffHeight 64;
		DropItem "HLPistol";
		+FRIENDLY
		-COUNTKILL
		Species "BlackMesa";
	}
	States
	{
	Spawn:
		HLI1 AABBCCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]] 1 A_HLBarneyLook;
		HLI2 AABB 1 A_HLBarneyLook;
		Loop;
	Spawn2:
		HLI2 CCDDEEFFGGHHIIJJKKLLMMNNOOPPQQRRSSTTUUVVWWXXYYZZ[[\\]] 1 A_HLBarneyLook;
		HLI3 AABBCCDD 1 A_HLBarneyLook;
		Loop;
	Guard:
		HLI3 E 2
		{
			ResetGunModel(true);
			A_HLBarneyLook();
		}
		HLI3 FGHIJKLMNOPQRSTUVWXYZ[\] 2 A_HLBarneyLook;
		HLI4 ABCDEF 2 A_HLBarneyLook;
		Loop;
	Tram:
		HLI4 GHIJKLMNOPQRSTUVWXYZ[\] 2;
		HLI5 ABCDEFGH 2;
		Loop;
	See:
		HLR1 ABCDEFGHIJKLMNOPQRSTUVW 1 A_HLBarneyChase;
		HLR1 A 0 A_Chatter;
		Loop;
	Missile:
		HLA1 ABCDEFGHIJKLMNOPQRSTUV 1 A_FaceTarget;
	Pistol:
		HLA1 WX 1 A_FaceTarget;
		HLA1 Y 1 Light("ImShootingAGun") A_BarneyGunshot;
		HLA1 Z[\] 1 Light("ImShootingAGun") A_FaceTarget;
		HLA2 AB 1 A_FaceTarget;
		HLA1 VVVV 1 A_FaceTarget;
		TNT1 A 0 A_MonsterRefire(0,"See");
		Loop;
	Pain:
		HLP1 A 1
		{
			ResetGunModel();
			A_Pain();
		}
		HLP1 DGJMPSU 1;
		HLP1 U 0 A_JumpIf(guard,"Guard");
		Goto See;
	Death:
		HLD1 A 2
		{
			A_ChangeModel("HLBarney", 2, flags:CMDL_HIDEMODEL);
			A_ScreamAndUnblock();
		}
		HLD1 BCDEFG 2;
		HLD1 H 2 A_PlaySound("halflife/weapons/bodydrop");
		HLD1 IJKL 2;
		HLD1 M -1;
		Stop;
	XDeath:
	Crush:
		TNT1 A 0 A_HLGibs;
		Stop;
	}
	virtual void A_BarneyGunshot()
	{
		A_FaceTarget();
		A_BarneyGunsmoke();
		A_PlaySound("halflife/weapons/pistol",CHAN_WEAPON);
		A_CustomBulletAttack(7,7,1,5,"NewPuff1");
	}
	void A_BarneyGunsmoke()
	{
		for(int i=0;i<2;i++)
			A_SpawnItemEx("GunSmoke",28,2,47);
	}
	actor ChooseBestFriend()
	{
		if(friendplayer)
			return players[friendplayer].mo;
		Actor mo;
		PlayerInfo player;
		double dist;
		for(int i=0;i<MAXPLAYERS;i++)
		{
			if(!playeringame[i])
				continue;
			player=players[i];
			mo=player.mo;
			if(mo.health<=0||Distance3D(mo)>128.0+64.0)
				continue;
			return mo;
		}
		return null;
	}
	virtual void A_HLBarneyLook()
	{
		if(!follower)
		{
			A_Look();
			return;
		}
		if(!goal)
			goal=ChooseBestFriend();
		if(!goal||Distance3D(goal)>256.0)
		{
			A_Look();
			return;
		}
		if(Distance3D(goal)>128.0)
		{
			SetStateLabel("See");
			return;
		}
		A_Face(goal);
		A_LookEx(LOF_DONTCHASEGOAL|LOF_NOSEESOUND|LOF_NOJUMP,0,0,360);
	}
	void A_Chatter()
	{
		if(!guard&&!random(0,32))
			A_PlaySound(SeeSound);
	}
	virtual void A_HLBarneyChase()
	{
		//If Barney is a follower but doesn't have a player to follow yet...
		if(follower&&!goal)
			goal=ChooseBestFriend();
		//If Barney is a follower, doesn't have a target, and the player is close enough...
		if(follower&&!target&&goal&&Distance3D(goal)<96.0)
		{
			if(random(0,1))
				SetStateLabel("Spawn");
			else
				SetStateLabel("Spawn2");
			return;
		}
		A_HLChase();
	}
}

class HLOtis : HLBarney
{
	override void HLModelSetup()
	{
		static const name modelskin1[]=
		{
			'barney_body_002.png',
			'barney_body_003.png',
			'barney_body_001.png'
		};
		static const name modelskin2[]=
		{
			'otis_head_000.png',
			'otis_head_001.png',
			'barney_head_001.png',
			'barney_head_002.png',
			'otis_head_004.png',
			'barney_body_002.png'
		};

		for(int i = 0; i <= 2; i++)
			A_ChangeModel("HLBarney", 0, "Models", "otis_body.iqm", i, "Models", modelskin1[i], CMDL_USESURFACESKIN);
		for(int i = 0; i <= 5; i++)
			A_ChangeModel("HLBarney", 1, "Models", "otis_head.iqm", i, "Models", modelskin2[i], CMDL_USESURFACESKIN, 0);

		ResetGunModel();
	}
	override void ResetGunModel(bool holster)
	{
		if(holster)
			A_ChangeModel("HLBarney", 2, "Models", "otis_gun2.iqm", 2, "Models", "v_desert_eagle_main_000.png");
		else
			A_ChangeModel("HLBarney", 2, "Models", "otis_gun1.iqm", 2, "Models", "v_desert_eagle_main_000.png", 0, 0);
	}
	Default
	{
		SeeSound "halflife/monsters/otis/idle";
		PainSound "halflife/monsters/otis/pain";
		DeathSound "halflife/monsters/otis/death";
		DropItem "HLDesertEagle";
	}
	override void A_BarneyGunshot()
	{
		A_FaceTarget();
		A_BarneyGunsmoke();
		A_PlaySound("halflife/weapons/deagleshot",CHAN_WEAPON);
		A_CustomBulletAttack(1,1,1,18,"NewPuff1");
	}
}

class HLBarneyGuard : HLBarney
{
	override void PostBeginPlay()
	{
		guard=1;
		SetStateLabel("guard");
		bUSESPECIAL=1;
		super.PostBeginPlay();
	}
}

class HLOtisGuard : HLOtis
{
	override void PostBeginPlay()
	{
		guard=1;
		SetStateLabel("guard");
		bUSESPECIAL=1;
		super.PostBeginPlay();
	}
}

class SgtHarrison : HLBarney
{
	Default
	{
		-ISMONSTER
		-FRIENDLY
	}
	override void PostBeginPlay()
	{
		guard=1;
		SetStateLabel("guard");
		super.PostBeginPlay();
	}
	override void A_HLBarneyChase()
	{
		A_Chase(null,null,CHF_NOPLAYACTIVE);
	}
}