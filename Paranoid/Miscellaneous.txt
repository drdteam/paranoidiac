class HLTeleportFog : Actor replaces TeleportFog
{
	Default
	{
		+NOBLOCKMAP
		+NOTELEPORT
		+NOGRAVITY
		+FORCEXYBILLBOARD
		RenderStyle "Add";
		Alpha .6;
	}
	States
	{
	Spawn:
		HTEL A 0 NODELAY A_PlaySound("misc/teleport",CHAN_BODY);
		HTEL AB 2 Bright LIGHT("TeleportFogLth1");
		HTEL CD 2 Bright LIGHT("TeleportFogLth2");
		HTEL EF 2 Bright LIGHT("TeleportFogLth3");
		HTEL GH 2 Bright LIGHT("TeleportFogLth4");
		HTEL IJ 2 Bright LIGHT("TeleportFogLth5");
		HTEL KL 2 Bright LIGHT("TeleportFogLth6");
		HTEL MN 2 Bright LIGHT("TeleportFogLth7");
		HTEL OP 2 Bright LIGHT("TeleportFogLth6");
		HTEL QR 2 Bright LIGHT("TeleportFogLth5");
		HTEL ST 2 Bright LIGHT("TeleportFogLth4");
		HTEL UV 2 Bright LIGHT("TeleportFogLth3");
		HTEL WX 2 Bright LIGHT("TeleportFogLth2");
		HTEL Y 2 Bright LIGHT("TeleportFogLth1");
		Stop;
	}
}

class BustedGrate : Actor
{
	Default
	{
		+NOGRAVITY
		Height 8;
	}
	States
	{
	Spawn:
		TNT1 A 10 NODELAY
		{
			A_PlaySound("bustgrate");
			actor debris;
			for(int i=0;i<5;i++)
			{
				for(int j=-22;j<=22;j+=22)
				{
					debris=A_SpawnProjectile("Debris01",0,j,frandom(-180,180),CMF_AIMDIRECTION);
					debris.A_ScaleVelocity(frandom(2.5,10));
					debris.vel.z=frandom(1.25,5);
				}
			}
		}
		TNT1 A 1 A_PlaySound("gratedebris");
		Stop;
	}
}

class Debris01 : Actor
{
	Default
	{
		Speed 1;
		Radius 7;
		Height 7;
		Mass 5;
		RenderStyle "Add";
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+DROPOFF
		+MISSILE
		+NOTELEPORT
	}
	States
	{
	Spawn:
		DEBA A 2 NODELAY {self.frame=random(0,4);}
		DEBA # 2 A_FadeOut;
		Wait;
	}
}

//===============
// Blood & Gibs
//===============

class HLBlood : Actor
{
	Default
	{
		Scale .15;
		Gravity .44;
		Mass 5;
		+DONTSPLASH
		+DONTBLAST
		+CANNOTPUSH
		+FORCEXYBILLBOARD
		+NOBLOCKMAP
		+NOTELEPORT
	}
	States
	{
	Spawn:
		TNT1 A 0 NODELAY
		{
			for(int i=0;i<3;i++)
				A_SpawnItemEx("ExtraBlood",random(3,-3),random(3,-3),random(3,-3),1,0,frandom(1.25,3),random(1,359),SXF_TRANSFERTRANSLATION);
		}
		BLD1 ABCD 6;
		Stop;
	}
}

class ExtraBlood : HLBlood
{
	Default
		{Scale .09;}
	States
	{
	Spawn:
		BLD1 A 12;
		BLD1 BCD 6;
		Stop;
	}
}

class HLGibs : Actor
{
	override void BeginPlay()
	{
		HLModelSetup();
		super.BeginPlay();
	}
	virtual void HLModelSetup()
	{
		static const name models[]=
		{
			'hlgibs1.iqm',
			'hlgibs2.iqm',
			'hlgibs3.iqm',
			'hlgibs4.iqm'
		};
		static const name modelskin[]=
		{
			'hlgibs1.png',
			'hlgibs2.png',
			'hlgibs3.png',
			'hlgibs4_000.png'
		};
		int mode = random(1, 4);
		A_ChangeModel("", 0, "Models", models[mode], 0, "Models", modelskin[mode], CMDL_USESURFACESKIN);
		if(mode == 4)
			A_ChangeModel("", 0, "Models", "", 1, "Models", 'hlgibs4_001.png', CMDL_USESURFACESKIN);
	}
	Default
	{
		radius 6;
		height 5;
		+DROPOFF
		+NOTELEPORT
		+CORPSE
		+CANNOTPUSH
	}
	States
	{
	Spawn:
		HLI1 A 2 NODELAY
		{
			bool num;
			actor bld;
			[num,bld]=A_SpawnItemEx("HLBlood",random(3,-3),random(3,-3),random(3,-3),flags:SXF_TRANSFERTRANSLATION);
			if(scale.x==2)
				bld.scale=(.5,.5);
			else if(scale.x==.75)
				bld.scale=(.06,.06);
			else
				A_SpawnItemEx("ExtraBlood",random(3,-3),random(3,-3),random(3,-3),1,0,0,random(1,359),SXF_TRANSFERTRANSLATION);
		}
		Loop;
	Crash:
		HLI1 A 300;
		HLI1 A 2 A_FadeOut;
		Wait;
	}
}

class XenGibs : HLGibs
{
	override void HLModelSetup()
	{
		static const name models[]=
		{
			'agibs1.md3',
			'agibs2.md3',
			'agibs3.md3',
			'agibs4.md3',
			'agibs5.md3',
			'agibs6.md3'
		};
		A_ChangeModel("", 0, "Models", models[random(0, 5)], 0, "Models", 'agibs.png');
	}
	Default
		{Translation "176:191=[222,254,114]:[43,55,0]";}
}