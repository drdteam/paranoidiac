class HLGonarch : HLMonster
{
	override void HLModelSetup()
	{
		static const name modelskin[] =
		{
			'big_mom_000.png',
			'big_mom_001.png',
			'big_mom_002.png',
			'big_mom_003.png',
			'big_mom_004.png',
			'big_mom_005.png'
		};
		for(int i = 0; i <= 5; i++)
			A_ChangeModel("", 0, "Models", "big_mom.iqm", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	Default
	{
		Health 5000;
		Mass 0x7FFFFFFF;
		+DONTHARMCLASS
		Speed 2.666667;
		Height 90;
		Radius 55;
		MaxStepHeight 48;
		MaxDropOffHeight 48;
		PainChance 10;
		PainChance "Crowbar", 54;
		+BOSS
		MissileChanceMult 0.125;
		BloodColor "DE FE 72";
		SeeSound "gonarch/sight";
		PainSound "gonarch/pain";
		DeathSound "gonarch/death";
		ActiveSound "gonarch/idle";
		Obituary "%o was melted by the gonarch's acid.";
		HitObituary "%o suffered internal bleedings, courtesy of the gonarch.";
		MeleeRange 80;
		MaxTargetRange 1100;
		Scale .8;
		Species "Xen";
		HLMonster.WalkTic 3;
	}
	States
	{
	See:
		HLW1 ABCDEFGHIJKLMNOPQRSTUVWX 1 A_HLChase;
		HLW1 Y 0 A_StartSound("halflife/monsters/gonarch/step", CHAN_6);
		HLW1 Z[\] 1 A_HLChase;
		HLW2 ABCDEFGHIJKLMNOPQRST 1 A_HLChase;
		HLW2 T 0
		{
			A_StartSound("halflife/monsters/gonarch/step", CHAN_6);
			if(random(0, 255) < 45)
				A_StartSound("halflife/monsters/gonarch/sight", CHAN_5);
		}
		Loop;
	Melee:
		HLA1 A 0 A_Jump(100, "AcidSimple");
		HLA1 A 0
		{
			if(random(0, 255) < 80)
				A_StartSound("halflife/monsters/gonarch/sight");
			else
				A_StartSound("halflife/monsters/gonarch/attack", CHAN_5);
		}
		HLA1 ABCDE 1 A_FaceTarget();
		HLA1 F 0 A_StartSound("halflife/monsters/zombie/attswing", CHAN_6);
		HLA1 FGHIJ 1 A_FaceTarget();
		HLA1 K 1 A_CustomMeleeAttack(random(1, 8) * 25, "zombie/hit");
		HLA1 LMNOPQRSTUVW 1;
		Goto See;
	Missile:
		HLA1 X 0 A_Jump(145, "AcidSimple");
		HLA1 X 2 A_StartSound("halflife/monsters/gonarch/attack", CHAN_5);
		HLA1 YZ[\] 2;
		HLA2 ABC 2;
		HLA2 D 0 A_StartSound("halflife/monsters/gonarch/spawnchild");
		HLA2 DEF 2
		{
			bool num;
			actor baby;
			[num, baby] = A_SpawnItemEx("HLBabyHeadCrab", random(10, -10), random(10, -10), flags: SXF_NOCHECKPOSITION);
			let me = HLBabyHeadCrab(baby);
			me.Speed = 10.0 / 3.0;
			me.gonarchbaby = 1;
		}
		HLA2 GHIJKLMNOPQRSTUVWXY 2;
		Goto See;
	AcidSimple:
		HLA2 Z 0 A_StartSound("halflife/monsters/gonarch/attack", CHAN_5);
		HLA2 Z[\] 2 A_FaceTarget;
		HLA3 ABCDEFG 2 A_FaceTarget;
		HLA3 H 2
		{
			class<actor> acid = "GonarchAcid", acidextra = "GonarchAcidExtra";
			if(random(0, 255) < 80)
			{
				acid = "GonarchAcid2";
				acidextra = "GonarchAcid2Extra";
			}
			let thisacid = A_SpawnProjectile(acid, 80);
			if(thisacid != null)
				thisacid.vel.z += 3;
			for(int i = 0; i < 15; i++)
				A_SpawnItemEx(acidextra, 0, 0, 80, random(2, -2), random(2, -2), random(1, 8));
		}
		HLA3 IJKLM 2;
		Goto See;
	Pain:
		HLP1 A 2 A_Pain;
		HLP1 BCDEFGHIJKLMNOPQ 2;
		Goto See;
	Death:
		HLD1 A 2 A_Scream;
		HLD1 B 2;
		HLD1 C 2 A_NoBlocking;
		HLD1 DEFGH 2;
		HLD1 I 2 A_StartSound("halflife/monsters/gonarch/step", CHAN_6);
		HLD1 JKLMNOPQ 2;
		HLD1 R 80;
		TNT1 A 10 A_XenGibsBig;
		Stop;
	}
}

class GonarchAcid : Actor
{
	Default
	{
		Projectile;
		Radius 12;
		Height 8;
		Speed 24;
		Scale .6;
		Damage 25;
		RenderStyle "Add";
		Alpha .9;
		-NOGRAVITY
		Gravity .18;
		PoisonDamage 50;
		+FORCERADIUSDMG
		DamageType "Gonarch";
		DeathSound "halflife/monsters/bullsquid/spitehit";
	}
	States
	{
	Spawn:
		X022 ABCD 4 AcidExtra;
		Loop;
	Death:
		TNT1 A 0 AcidDeath;
		Stop;
	}
	void AcidExtra(class<actor> acid = "GonarchAcidExtra")
	{
		for(int i = 0; i < 2; i++)
			A_SpawnItemEx(acid, random(5, -5), random(5, -5), random(5, -5));
	}
	void AcidDeath(int exp = 128, class<actor> acid = "GonarchAcidExtra", int cnt = 10)
	{
		A_Explode(exp, exp, 0);
		for(int i = 0; i < cnt; i++)
			A_SpawnItemEx(acid, 0, 0, 0, random(2, -2), random(2, -2), random(0, 4));
	}
}

class GonarchAcid2 : GonarchAcid
{
	Default
	{
		Speed 19;
		Scale .9;
		Damage 30;
		RenderStyle "Translucent";
		Alpha .8;
		Translation "80:111 = 152:159";
	}
	States
	{
	Spawn:
		X022 ABCD 4 AcidExtra("GonarchAcid2Extra");
		Loop;
	Death:
		TNT1 A 0
		{
			AcidDeath(256, "GonarchAcid2Extra", 12);
			for(int i = 0; i < 8; i++)
				A_SpawnItemEx("GonarchAcid2MiniExplosive", 0, 0, 5, random(-3, 3), random(-3, 3), random(2, 7), random(0, 359));
		}
		Stop;
	}
}

class GonarchAcidExtra : Actor
{
	Default
	{
		Projectile;
		+NOCLIP
		Scale .3;
		RenderStyle "Add";
		Alpha .9;
		-NOGRAVITY
		Gravity .2;
	}
	States
	{
	Spawn:
		X022 AC 3;
		TNT1 A 0 A_Jump(100, "FadeOut");
		Loop;
	FadeOut:
		X022 AC 3 A_FadeOut;
		Loop;
	}
}

class GonarchAcid2Extra : GonarchAcidExtra
{
	Default
	{
		RenderStyle "Translucent";
		Alpha .8;
		Translation "80:111 = 152:159";
	}
}

class GonarchAcid2MiniExplosive : GonarchAcid2
{
	Default
	{
		Damage 6;
		Speed 10;
		Radius 8;
		Height 12;
		Scale .55;
		Gravity .3;
		PoisonDamage 15;
		-FORCERADIUSDMG
		DeathSound "";
	}
	States
	{
	Spawn:
		X022 ABCD 3;
		Loop;
	Death:
		TNT1 A 0
		{
			for(int i = 0; i < 8; i++)
				A_SpawnItemEx("GonarchAcid2Mini", 0, 0, 0, random(3, -3), random(3, -3), random(1, 5), random(0, 359));
		}
		Stop;
	}
}

class GonarchAcid2Mini : GonarchAcid2Extra
{
	Default
	{
		DamageType "Gonarch";
		PoisonDamage 3;
		-NOCLIP
		Damage 1;
		Scale .18;
	}
}