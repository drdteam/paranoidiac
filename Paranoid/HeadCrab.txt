//===========
// Head Crab
//===========

class HLHeadCrab : HLMonster
{
	int drowncounter;
	override bool Slam(Actor victim)
	{
		SetStateLabel("Slam");
		if(victim.bISMONSTER||(victim is "PlayerPawn"))
		{
			A_StartSound("halflife/monsters/headcrab/meleehit", CHAN_BODY);
			return super.slam(victim);
		}
		return 0;
	}
	Default
	{
		Damage 1;
		Health 10;
		Speed 1.6;
		Height 25;
		Radius 8;
		PainChance 200;
		PainChance "Crowbar",256;
		BloodColor "DE FE 72";
		SeeSound "halflife/monsters/headcrab/sight";
		PainSound "halflife/monsters/headcrab/pain";
		DeathSound "halflife/monsters/headcrab/death";
		ActiveSound "halflife/monsters/headcrab/idle";
		MaxDropoffHeight 384;
		+DONTHARMCLASS;
		DamageFactor "Gonarch",0;
		Species "Xen";
		HLMonster.WalkTic 5;
	}
	States
	{
	Spawn:
		HLI1 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 2 A_HLHeadCrabLook;
		HLI2 AB 2 A_HLHeadCrabLook;
		Loop;
	See:
		HLR1 A 0 A_JumpIf(waterlevel>=2,"Drown");
		HLR1 ABCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1 A_HLChase;
		Loop;
	Missile:
		HLA1 A 1 A_FaceTarget;
		HLA1 CEG 1;
		HLA1 I 1 A_StartSound("halflife/monsters/headcrab/jump");
		HLA1 KMOQS 1;
		HLA1 U 1 A_HLHeadCrabAttack(5,8.75);
		HLA1 U 1 A_CheckFloor(1);
		Wait;
	Slam:
		HLA1 W 1 A_Stop;
		HLA1 Y[] 1;
		HLA2 B 60;
		Goto See;
	Pain:
		HLP1 A 1 A_Pain;
		HLP1 CEGIKMO 1;
		Goto See;
	Death:
		HLD1 A 1 A_ScreamAndUnblock;
		HLD1 BCDEFGHIJKLMNOPQRSTUVWXYZ[\] 1;
		HLD2 A 1;
		HLD2 B 2
		{
			if(waterlevel>=3)
				vel.z+=.75;
		}
		Wait;
	XDeath:
	Crush:
		TNT1 A 0
		{
			A_HLGibs(2,"XenGibs");
			scale=(.75,.75);
			for(int i=0;i<4;i++)
				A_SpawnItemEx("XenGibs",random(5,-5),random(5,-5),random(10,40),random(1,7),random(1,7),random(5,13),random(0,359),SXF_TRANSFERSCALE);
		}
		Stop;
	Drown:
		HLI1 A 12
		{
			if(drowncounter>=3)
				A_Die();
			else
			{
				A_Pain();
				drowncounter++;
				A_SetTics(random(12,20));
			}
		}
		Loop;
	}
	void A_HLHeadCrabLook()
	{
		A_Look();
		if(waterlevel>=2)
			SetStateLabel("Drown");
	}
	void A_HLHeadCrabAttack(float min,float max)
	{
		if(target==null)
			return;
		bSkullfly=true;
		VelFromAngle(20);
		vel.z+=frandom(min,max);
	}
}

class HLBabyHeadCrab : HLHeadCrab
{
	bool gonarchbaby;
	Default
	{
		Height 8;
		-SOLID
		RenderStyle "Translucent";
		Alpha .9;
		MaxTargetRange 128;
		maxdropoffheight 24;
		PainSound "";
		DeathSound "";
	}
	States
	{
	Spawn:
		Goto HLMonster::Spawn;
	See:
		HLW1 A 0 A_JumpIf(gonarchbaby,"See2");
		HLW1 ACEGIKMOQSUWY[] 1 A_HLChase;
		HLW2 BDF 1 A_HLChase;
		Loop;
	See2:
		HLW1 ACEGIKMOQSUWY[] 1 A_HLChase(3);
		HLW2 BDF 1 A_HLChase(3);
		Loop;
	Missile:
		HLA1 A 1 A_FaceTarget;
		HLA1 CEGIKMOQS 1;
		HLA1 U 1 A_HLHeadCrabAttack(2.5,6.25);
		HLA1 WY[] 1;
		HLA1 \ 3 A_CheckFloor(1);
		Wait;
		HLA1 ] 60 A_stop;
		Goto See;
	XDeath:
		TNT1 A 0
		{
			scale=(.75,.75);
			for(int i=0;i<4;i++)
				A_SpawnItemEx("XenGibs",random(2,-2),random(2,-2),random(0,20),random(1,4),random(1,4),random(2,6),random(0,359),SXF_TRANSFERSCALE);
		}
		Stop;
	}
}