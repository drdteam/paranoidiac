class Monitor : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "monitor.md3", 0, "Models", "monitor.jpg");}
	Default
	{
		Radius 15;
		Height 20;
		Scale .25;
		+PUSHABLE
	}
}

class Monitor1 : Monitor
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "monitor.md3", 0, "Models", "monitor1.png");}
}

class Monitor2 : Monitor
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "monitor.md3", 0, "Models", "monitor2.png");}
}

class Monitor3 : Monitor
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "monitor.md3", 0, "Models", "monitor3.png");}
}

class keyboard1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_keyboard1.md3", 0, "Models", "br_keyboard1.jpg");}
	Default
	{
		Scale .25;
		Radius 8;
		Height 2;
	}
}

class keyboard3 : keyboard1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_keyboard3.md3", 0, "Models", "br_pcs2.jpg");}
}

class mouse3 : keyboard1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_mouse1.md3", 0, "Models", "br_pcs2.jpg");}
	Default
	{
		Radius 3;
		Height 4;
	}
}

class flatpanel1 : ModelBase
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_monitor1.jpg',
			'br_screen1.jpg'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor1.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	Default
	{
		Scale .8;
		Radius 12;
		Height 20;
	}
}

class flatpanel2 : flatpanel1
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_monitor1.jpg',
			'br_screen2.png'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor1.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
}

class flatpanel3 : flatpanel1
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_pcs1.jpg',
			'br_screen1.jpg'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor3.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
		A_SetSpriteRotation(180);
	}
	Default
	{
		Scale .5;
		Radius 8;
		Height 16;
	}
}

class flatpanel4 : flatpanel3
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_pcs1.jpg',
			'br_screen2.png'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor3.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
		A_SetSpriteRotation(180);
	}
}

class flatpanel5 : ModelFloat
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_monitor5.png',
			'br_screen1.jpg'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	Default
	{
		Radius 2;
		Height 32;
		Scale 1.2;
	}
}

class flatpanel6 : flatpanel5
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_monitor5.png',
			'br_screen2.jpg'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
}

class flatpanel7 : flatpanel5
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_monitor5.png',
			'br_screen5.jpg'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	States
	{
	Spawn:
		HLI1 A 105 A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", 1, "Models", 'br_screen5.png', CMDL_USESURFACESKIN);
		HLI1 B 105 A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", 1, "Models", 'br_screen6.png', CMDL_USESURFACESKIN);
		HLI1 C 105 A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", 1, "Models", 'br_screen7.png', CMDL_USESURFACESKIN);
		HLI1 D 105 A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", 1, "Models", 'br_screen9.png', CMDL_USESURFACESKIN);
		Loop;
	}
}

class flatpanel8 : flatpanel5
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_monitor5.png',
			'br_screen8.png'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
}

class flatpanel9 : flatpanel5
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_monitor5.png',
			'br_screen10.png'
		};
		for(int i = 0; i <= 1; i++)
			A_ChangeModel("ModelBase", 0, "Models", "br_monitor5.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
}

class pc1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_pc1.md3", 0, "Models", "br_pc1.jpg");}
	Default
	{
		Scale .5;
		Radius 12;
		Height 20;
	}
}

class pc3 : pc1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_pc3.md3", 0, "Models", "br_pcs1.jpg");}
}

class modem : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_pc2.md3", 0, "Models", "br_pc2.jpg");}
	Default
	{
		Scale .75;
		Radius 4;
		Height 6;
	}
}

class server1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_server1.md3", 0, "Models", "br_server1.jpg");}
	Default
		{Height 60;}
}

class server2 : server1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_server2.md3", 0, "Models", "br_server2.jpg");}
}

class server3 : server1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_server3.md3", 0, "Models", "br_server3.jpg");}
}

//=============================================
// Non-spawnable models
// Electrical Equipment: transformers, meters
// Lights, Tesla Coil
//=============================================

class Transformer1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "transformer.md3", 0, "Models", "transformer.jpg");}
	override void BlockingSetup()
	{
		blockmax = 1;
		blockpos[0] = (-8, 8, 88);
		blocksize[0] = (4, 16);
	}
	Default
	{
		Scale 2;
		Radius 24;
		Height 88;
	}
}

class Meter1 : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "meter1.md3", 0, "Models", "meters.jpg");}
	Default
	{
		Radius 4;
		Height 12;
	}
}

class Meter2 : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "meter2.md3", 0, "Models", "meters.jpg");}
	Default
	{
		Radius 16;
		Height 32;
	}
}

class Meter3 : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "meter2.md3", 0, "Models", "meters.jpg");}
	Default
	{
		Scale 1.5;
		Radius 24;
		Height 48;
	}
}

class light2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "light2.md2", 0, "Models", "light2.png");}
	Default
	{
		Radius 16;
		Height 42;
	}
	States
	{
	Spawn:
		HLI1 A -1 Bright;
		Stop;
	}
}

class light1 : light2
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "light1.md2", 0, "Models", "light1.png");}
	Default
	{
		Scale .7;
		Radius 6;
		Height 8;
		+NOGRAVITY
	}
}

class Tesla : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_tesla.md3", 0, "Models", "br_tesla.png");}
	Default
	{
		Radius 16;
		Height 72;
	}
}

//====================================================================
// Non-spawnable models (some of which require 3D sectors)
// Heavy Equipment: Fork lifts, backhoe, trailers, generators,
// steel girders
//====================================================================

class Forklift1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "forktruck.md2", 0, "Models", "forktruck.png");}
	Default
	{
		Scale 1.2;
		Height 64;
	}
}

class Forklift2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "forklift.md3", 0, "Models", "forklift.png");}
	override void BlockingSetup()
	{
		blockmax = 5;
		blockpos[0] = (28, 0, 0);
		blockpos[1] = (32, 24, 0);
		blockpos[2] = (32, -24, 0);
		blockpos[3] = (44, 24, 0);
		blockpos[4] = (44, -24, 0);
		blocksize[0] = (2, 48);
		blocksize[1] = (1, 48);
		blocksize[2] = (1, 48);
		blocksize[3] = (3, 48);
		blocksize[4] = (3, 48);
	}
	Default
	{
		Radius 24;
		Height 32;
	}
}

class Backhoe1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "backhoe.md3", 0, "Models", "backhoe.png");}
	override void BlockingSetup()
	{
		blockmax = 5;
		blockpos[0] = (32, 0, 0);
		blockpos[1] = (64, 0, 0);
		blockpos[2] = (-16, 0, 0);
		blockpos[3] = (-56, 0, 0);
		blockpos[4] = (-88, 0, 0);
		blocksize[0] = (32, 48);
		blocksize[1] = (32, 32);
		blocksize[2] = (32, 64);
		blocksize[3] = (12, 64);
		blocksize[4] = (12, 64);
	}
	Default
	{
		Scale 1.6;
		Height 64;
	}
}

class Trailer1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "trailer1.md3", 0, "Models", "trailer1.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (144, 40, 0);
		blockpos[1] = (144, -40, 0);
		blocksize[0] = (2, 40);
		blocksize[1] = (2, 40);
	}
	Default
	{
		Scale 6;
		Height 64;
	}
}

class Trailer2 : Trailer1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "trailer1.md3", 0, "Models", "trailer2.png");}
}

class Generator1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "generator.md3", 0, "Models", "generator.png");}
	override void BlockingSetup()
	{
		blockmax = 3;
		blockpos[0] = (48, 0, 0);
		blockpos[1] = (80, 0, 0);
		blockpos[2] = (-24, 0, 0);
		blocksize[0] = (8, 24);
		blocksize[1] = (4, 12);
		blocksize[2] = (24, 48);
	}
	Default
	{
		Scale 3;
		Radius 24;
		Height 64;
	}
}

class Generator2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "generator2.md2", 0, "Models", "generator2.png");}
	Default
	{
		Scale 1.75;
		Height 48;
		+PUSHABLE
	}
}

class Generator3 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "generator3.md3", 0, "Models", "generator3.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (128, 0, 0);
		blockpos[1] = (-112, 0, 0);
		blocksize[0] = (64, 96);
		blocksize[1] = (48, 64);
	}
	Default
	{
		Radius 64;
		Height 96;
	}
}

class Generator4 : ModelBase
{
	override void Activate (Actor activator)
		{SetStateLabel("Active");}
	override void Deactivate (Actor activator)
		{SetStateLabel("Inactive");}
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "generator3.md3", 0, "Models", "generator3.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (64, 0, 0);
		blockpos[1] = (-64, 0, 0);
		blocksize[0] = (32, 48);
		blocksize[1] = (24, 32);
	}
	Default
	{
		Scale .5;
		Radius 32;
		Height 48;
	}
	States
	{
	Active:
		HLI1 A 12;
		HLI1 B 11;
		HLI1 C 10;
		HLI1 D 9;
		HLI1 E 8;
		HLI1 F 7;
		HLI1 G 6;
		HLI1 H 5;
		HLI1 I 4;
		HLI1 J 3;
		HLI1 K 2;
		HLI1 L 1;
	Spawn:
		HLI1 ABCDEFGHIJKL 1;
		Loop;
	Inactive:
		HLI1 A 1;
		HLI1 B 2;
		HLI1 C 2;
		HLI1 D 4;
		HLI1 E 5;
		HLI1 F 6;
		HLI1 G 7;
		HLI1 H 8;
		HLI1 I 9;
		HLI1 J 10;
		HLI1 K 11;
		HLI1 L 12;
		HLI1 A -1;
		Stop;
	}
}

class girder1 : ModelBase
{
	override void ModelHeightSetup()
	{
        let defaultScaley = GetDefaultByType(GetClass()).Scale.y;
		Scale.y = defaultScaley / ModelHeightMul;
	}
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "girder1.md2", 0, "Models", "girder1.png");}
	Default
	{
		Radius 34;
		Height 416;
	}
}

class girder2 : girder1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "girder2.md2", 0, "Models", "girder2.png");}
	override void BlockingSetup()
	{
		blockmax = 6;
		blockpos[0] = (0, 64, 0);
		blockpos[1] = (0, 128, 0);
		blockpos[2] = (0, 192, 0);
		blockpos[3] = (0, -64, 0);
		blockpos[4] = (0, -128, 0);
		blockpos[5] = (0, -192, 0);
		for(int i = 0; i <= 5; i++)
			blocksize[i] = (32, 64);
	}
	Default
	{
		Height 64;
		+NOGRAVITY
	}
}

class girder3 : girder2
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "girder1.md2", 0, "Models", "girder1.png");}
	Default
	{
		Scale 4;
		Radius 136;
		Height 1664;
	}
}

class girder4 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "girder2.md2", 0, "Models", "girder2.png");}
	Default
	{
		Scale 4;
		Radius 128;
		Height 416;
		+NOGRAVITY
	}
}

//====================================================================
// Non-spawnable models (some of which require 3D sectors)
// Simple Vehicles: Bulldozer, Cargo truck, Apache helicopter
//====================================================================

class Bulldozer1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "bulldozer.md3", 0, "Models", "bulldozer.png");}
	override void BlockingSetup()
	{
		blockmax = 20;
		blockpos[0] = (-16, 0, 88);
		blockpos[1] = (80, -32, 4);
		blockpos[2] = (80, -16, 4);
		blockpos[3] = (80, 16, 4);
		blockpos[4] = (80, 32, 4);
		blockpos[5] = (48, -16, 4);
		blockpos[6] = (48, 16, 4);
		blockpos[7] = (-48, -16, 4);
		blockpos[8] = (-48, 16, 4);
		blockpos[9] = (-48, -32, 4);
		blockpos[10] = (-16, -32, 4);
		blockpos[11] = (16, -32, 4);
		blockpos[12] = (48, -32, 4);
		blockpos[13] = (-48, 32, 4);
		blockpos[14] = (-16, 32, 4);
		blockpos[15] = (16, 32, 4);
		blockpos[16] = (48, 32, 4);
		blockpos[17] = (-32, 0, 4);
		blockpos[18] = (-48, -32, 4);
		blockpos[19] = (-48, 32, 4);
		blocksize[0] = (36, 2);
		for(int i = 1; i <= 8; i++)
			blocksize[i] = (16, 40);
		for(int i = 9; i <= 16; i++)
			blocksize[i] = (16, 24);
		blocksize[17] = (8, 64);
		blocksize[18] = (2, 64);
		blocksize[19] = (2, 64);
	}
	Default
	{
		Radius 16;
		Height 36;
	}
}

class Truck01 : ModelBase
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'truck_research_000.png',
			'truck_research_001.png',
			'truck_research_002.png',
			'truck_research_003.png',
			'truck_research_004.png',
			'truck_research_005.png',
			'truck_research_006.png',
			'truck_research_007.png'
		};
		for(int i = 0; i <= 7; i++)
			A_ChangeModel("ModelBase", 0, "Models", "truck_research.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	override void BlockingSetup()
	{
		blockmax = 7;
		blockpos[0] = (94, -28, 0);
		blockpos[1] = (94, 28, 0);
		blockpos[2] = (-94, -28, 0);
		blockpos[3] = (-94, 28, 0);
		blockpos[4] = (-126, 34, 40);
		blockpos[5] = (-126, 0, 40);
		blockpos[6] = (-126, -34, 40);
		blocksize[0] = (30, 104);
		blocksize[1] = (30, 104);
		blocksize[2] = (30, 122);
		blocksize[3] = (30, 122);
		blocksize[4] = (10, 82);
		blocksize[5] = (10, 82);
		blocksize[6] = (10, 82);
	}
	Default
	{
		Radius 58;
		Height 122;
	}
}

class apache : ModelBase
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'apache_000.png',
			'apache_001.png',
			'apache_002.png',
			'apache_003.png',
			'apache_004.png',
			'apache_005.png',
			'apache_006.png',
			'apache_007.png',
			'apache_008.png',
			'apache_009.png',
			'apache_010.png',
			'apache_011.png',
			'apache_012.png',
			'apache_013.png',
			'apache_014.png',
			'apache_015.png',
			'apache_016.png',
			'apache_017.png',
			'apache_018.png',
			'apache_019.png',
			'apache_020.png',
			'apache_021.png',
			'apache_022.png'
		};
		for(int i = 0; i <= 22; i++)
			A_ChangeModel("", 0, "Models", "apache.md3", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	override void BlockingSetup()
	{
		blockmax = 11;
		blockpos[0] = (192, 0, 48);
		blockpos[1] = (128, 0, 40);
		blockpos[2] = (80, -8, 40);
		blockpos[3] = (104, 0, 20);
		blockpos[4] = (0, 80, 28);
		blockpos[5] = (0, -80, 28);
		blockpos[6] = (-96, 0, 28);
		blockpos[7] = (-160, 0, 20);
		blockpos[8] = (-224, 0, 20);
		blockpos[9] = (-272, 0, 20);
		blockpos[10] = (-320, -0, 20);
		blocksize[0] = (20, 32);
		blocksize[1] = (32, 64);
		blocksize[2] = (64, 72);
		blocksize[3] = (16, 24);
		blocksize[4] = (32, 40);
		blocksize[5] = (32, 40);
		blocksize[6] = (48, 56);
		blocksize[7] = (24, 48);
		blocksize[8] = (24, 32);
		blocksize[9] = (24, 24);
		blocksize[10] = (16, 96);
	}
	Default
	{
		Radius 48;
		Height 128;
	}
}

//===================================================
// Non-spawnable models
// Commodes, urinals, desks, chairs, filing cabinets
//===================================================

class Toilet1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "toilet1.md2", 0, "Models", "toilet1.png");}
	Default
	{
		Scale .83;
		Radius 16;
		Height 28;
	}
}

class Toilet2 : Toilet1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "toilet1.md2", 0, "Models", "toilet2.png");}
}

class ToiletStainless : Toilet1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "toiletst.md3", 0, "Models", "toiletst.png");}
	Default
		{Scale 1.8;}
}

class Urinal1 : Toilet1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "urinal.md2", 0, "Models", "urinal.png");}
	Default
	{
		Scale .6;
		Height 40;
	}
}

class Armchair : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "armchair.md2", 0, "Models", "armchair.png");}
	Default
		{Height 29;}
}

class Sofa : Armchair
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "sofa.md2", 0, "Models", "sofa.png");}
}

class Chair1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "chair1.md3", 0, "Models", "chair1.png");}
	Default
	{
		Scale .9;
		Radius 10;
		Height 32;
		+PUSHABLE
	}
}

class Chair2 : Chair1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "chair2.md2", 0, "Models", "chair2.png");}
	Default
		{Scale .7;}
}

class Chair3 : Chair1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "chair3.md2", 0, "Models", "chair3.png");}
	Default
		{Scale 1;}
}

class Desklamp1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "desklamp1.md3", 0, "Models", "desklamp1.png");}
	Default
	{
		Scale .4;
		Radius 4;
		Height 16;
		+PUSHABLE
	}
}

class Desklamp2 : Desklamp1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "desklamp2.md2", 0, "Models", "desklamp2.png");}
}

class Desk1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "desk1.md2", 0, "Models", "desk1.png");}
	Default
	{
		XScale 1.2;
		Height 32;
	}
}

class Desk2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "desk2.md3", 0, "Models", "desk2.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (0, 21, 16);
		blockpos[1] = (0, -21, 16);
		blocksize[0] = (20, 11);
		blocksize[1] = (20, 11);
	}
	Default
	{
		Scale .8;
	}
}

class Desk3 : Desk2
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "desk3.md3", 0, "Models", "desk3.png");}
}

class Desk4 : Desk2
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "desk4.md3", 0, "Models", "desk4.png");}
}

class Desk5 : Desk2
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "desk5.md3", 0, "Models", "desk5.png");}
}

class Desk6 : Desk2
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "desk6.md3", 0, "Models", "desk6.png");}
}

class HandDryer : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "handdryer.md3", 0, "Models", "handdryer.png");}
	Default
	{
		Scale 1.5;
		Radius 4;
		Height 8;
	}
}

class Sink1 : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "sink1.md3", 0, "Models", "sink1.png");}
	Default
	{
		Scale 1.75;
		Radius 8;
		Height 16;
	}
}

class Sink2 : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "sink2.md3", 0, "Models", "sink2.png");}
	Default
	{
		Scale 2.2;
		Radius 16;
		Height 20;
	}
}

class SoapDispenser : HandDryer
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "soapdisp.md3", 0, "Models", "soapdisp.png");}
	Default
		{Radius 8;}
}

class ToiletPaper : HandDryer
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "tpaper.md3", 0, "Models", "tpaper09.png");}
	Default
		{Height 4;}
}

class Bed01 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_frame1.md3", 0, "Models", "br_frame1.jpg");}
	override void BlockingSetup()
	{
		ridermax = 1;
		rider[0] = BuildRider("Mattress01");
	}
	Default
		{Height 24;}
}

class Bed02 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "br_frame1.md3", 0, "Models", "br_frame1.jpg");}
	override void BlockingSetup()
	{
		ridermax = 1;
		rider[0] = BuildRider("Mattress02");
	}
	Default
	{
		Radius 16;
		Height 36;
	}
}

class Mattress01 : ModelBase
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'br_mattress1.jpg',
			'br_mattress4.jpg'
		};
		A_ChangeModel("", 0, "Models", "br_mattress1.md3", 0, "Models", modelskin[random(0, 1)]);
	}
}
class Mattress02 : Mattress01{}

class FileCab2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "filec02.md2", 0, "Models", "filecab.png");}
	Default
	{
		XScale .75;
		YScale .5;
		Radius 12;
		Height 32;
	}
}

class FileCab3: FileCab2
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "filec03.md2", 0, "Models", "filecab.png");}
	Default
		{Height 48;}
}

class DeerHead : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_deer.md3", 0, "Models", "br_deer.png");}
	Default
	{
		Scale 1.25;
		Radius 32;
		Height 40;
	}
}

class VidCam1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "vidcam.md3", 0, "Models", "vidcam.png");}
	Default
	{
		Radius 16;
		Height 56;
	}
}

class VidCam2 : VidCam1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "vidcam2.md3", 0, "Models", "vidcam2.png");}
	Default
		{Radius 10;}
}

class TankGlass : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "tankglass.md3", 0, "Models", "suv_glass.png");}
	Default
	{
		Radius 2;
		Height 2;
		RenderStyle "Translucent";
		Alpha .5;
		-SOLID
	}
}

//=======================
// Non-spawnable models
// Pipes, tanks, valves
//=======================

class Pipe1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xpipe1.md3", 0, "Models", "xptv.png");}
	override void BlockingSetup()
	{
		blockmax = 6;
		blockpos[0] = (0, 60, 0);
		blockpos[1] = (0, 120, 0);
		blockpos[2] = (0, 180, 0);
		blockpos[3] = (0, -60, 0);
		blockpos[4] = (0, -120, 0);
		blockpos[5] = (0, -180, 0);
		for(int i = 0; i < blockmax; i++)
			blocksize[i] = (20, 56);
	}
	Default
		{Height 56;}
}

class Pipe1a : pipe1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xpipe1a.md3", 0, "Models", "xptv.png");}
}

class Pipe2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xpipe2.md2", 0, "Models", "xptv.png");}
	Default
		{Height 66;}
}

class Pipe3 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xpipe1.md3", 0, "Models", "xptv.png");}
	override void BlockingSetup()
	{
		blockmax = 6;
		blockpos[0] = (0, 30, 0);
		blockpos[1] = (0, 60, 0);
		blockpos[2] = (0, 90, 0);
		blockpos[3] = (0, -30, 0);
		blockpos[4] = (0, -60, 0);
		blockpos[5] = (0, -90, 0);
		for(int i = 0; i < blockmax; i++)
			blocksize[i] = (10, 28);
	}
	Default
	{
		Scale .5;
		Radius 10;
		Height 28;
	}
}

class Pipe3a : Pipe3
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xpipe1a.md3", 0, "Models", "xptv.png");}
}

class Pipe4 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xpipe2.md2", 0, "Models", "xptv.png");}
	Default
	{
		Scale .5;
		Radius 10;
		Height 33;
	}
}

class pipe5 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "pipe5.md2", 0, "Models", "pipe5.png");}
	Default
	{
		Scale .75;
		Radius 8;
		Height 136;
	}
}

class pipe6 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "pipe5.md2", 0, "Models", "pipe5.png");}
	Default
	{
		Scale .5;
		Radius 6;
		Height 90;
	}
}

class pipe7 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "pipe5.md2", 0, "Models", "pipe5.png");}
	Default
	{
		Radius 12;
		Height 181;
	}
}

class pipe8 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "pipe5.md2", 0, "Models", "pipe5.png");}
	Default
	{
		Scale 1.5;
		Radius 16;
		Height 272;
	}
}

class PipeMaze : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "pipemaze.md3", 0, "Models", "pipemaze.png");}
	Default
	{
		Radius 64;
		Height 28;
	}
}

class Tank01 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xtank.md3", 0, "Models", "xptv2.png");}
	Default
	{
		Radius 28;
		Height 86;
	}
}

class Tank02 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xtank1.md2", 0, "Models", "xptv.png");}
	Default
	{
		Radius 15;
		Height 36;
	}
}

class Tank02a : Tank02
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xtank1a.md2", 0, "Models", "xptv.png");}
	Default
		{Radius 4;}
}

class tank03 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "tank03.md3", 0, "Models", "tank03.png");}
	Default
	{
		Scale 5;
		Radius 6;
	}
}

class tank04 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "tank04.md3", 0, "Models", "tank04.png");}
	override void BlockingSetup()
	{
		blockmax = 5;
		blockpos[0] = (160, 0, 40);
		blockpos[1] = (188, 0, 32);
		blockpos[2] = (204, 0, 0);
		blockpos[3] = (114, -56, 0);
		blockpos[4] = (128, -64, 0);
		blocksize[0] = (8, 16);
		blocksize[1] = (8, 16);
		blocksize[2] = (12, 28);
		blocksize[3] = (3, 255);
		blocksize[4] = (8, 32);
	}
	Default
	{
		Scale 6;
		Radius 72;
		Height 264;
	}
}

class tank05 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "tank05.md3", 0, "Models", "tank05.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (20, 0, 0);
		blockpos[1] = (-20, 0, 0);
		blocksize[0] = (12, 36);
		blocksize[1] = (12, 36);
	}
	Default
	{
		Scale 5;
		Radius 12;
		Height 36;
	}
}

class tank06 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "tank04a.md3", 0, "Models", "tank04.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (84, 0, 0);
		blockpos[1] = (50, -24, 0);
		blocksize[0] = (6, 14);
		blocksize[1] = (1, 128);
	}
	Default
	{
		Scale 3;
		Radius 36;
		Height 128;
	}
}

class propane1a : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "propane1.md3", 0, "Models", "propane1a.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (32, 0, 0);
		blockpos[1] = (-32, 0, 0);
		blocksize[0] = (20, 40);
		blocksize[1] = (20, 40);
	}
	Default
	{
		Scale 3;
		Height 40;
	}
}

class propane1b : propane1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "propane1.md3", 0, "Models", "propane1b.png");}
}

class propane1c : propane1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "propane1.md3", 0, "Models", "propane1c.png");}
}

class propane2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "propane2.md3", 0, "Models", "propane2.png");}
	Default
	{
		Scale .8;
		Radius 10;
		Height 36;
	}
}

class Valve1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xvalve1.md2", 0, "Models", "xptv.png");}
	override void BlockingSetup()
	{
		blockmax = 1;
		blockpos[0] = (0, 36, 0);
		blocksize[0] = (16, 50);
	}
	Default
	{
		Radius 24;
		Height 50;
	}
}

//===========================
// Non-spawnable models
// Radios, toolboxes
//===========================

class Toolbox1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "toolbox1.md3", 0, "Models", "toolbox1.png");}
	Default
	{
		Height 40;
		+PUSHABLE
	}
}

class Toolbox2 : Toolbox1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "toolbox2.md3", 0, "Models", "toolbox2.png");}
	Default
	{
		Height 48;
		Scale .8;
	}
}

class Radio1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "radio1.md3", 0, "Models", "radio.png");}
	Default
	{
		Scale .5;
		Radius 8;
		Height 8;
	}
}

class Radio2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "radio2.md3", 0, "Models", "radio.png");}
	Default
	{
		Scale .4;
		Radius 16;
		Height 12;
	}
}

class Radio3 : Radio1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "radio3.md3", 0, "Models", "radio.png");}
	Default
	{
		Radius 4;
		Height 12;
	}
}

class Radio4 : Radio1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "radio4.md3", 0, "Models", "radio.png");}
	Default
		{Radius 10;}
}

class Radio5 : Radio2
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "radio5.md3", 0, "Models", "radio.png");}
	Default
	{
		Scale 1;
		Radius 2;
	}
}

//====================================================================
// Non-spawnable models
// Trees, plants, cacti
//====================================================================

class Palm1a : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "palm1.md3", 0, "Models", "palm1a.png");}
	Default
	{
		Scale 20;
		Radius 8;
		Height 230;
	}
}

class Palm1b : Palm1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "palm1.md3", 0, "Models", "palm1b.png");}
}

class Palm2a : Palm1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "palm2.md3", 0, "Models", "palm2a.png");}
	Default
		{Scale 1;}
}

class Palm2b : Palm2a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "palm2.md3", 0, "Models", "palm2b.png");}
}

class Palm3a : Palm1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "palm3.md3", 0, "Models", "palm3a.png");}
	Default
	{
		Scale .5;
		Height 160;
	}
}

class Palm3b : Palm3a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "palm3.md3", 0, "Models", "palm3b.png");}
}

class Palm3c : Palm3a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "palm3.md3", 0, "Models", "palm3c.png");}
}

class Cactus : Palm2a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "cactus.md2", 0, "Models", "cactus.png");}
	Default
		{Height 128;}
}

class Fern : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "fern.md2", 0, "Models", "fern.png");}
	Default
		{Radius 16;}
}

class Plant1 : Palm2a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "plant1.md2", 0, "Models", "plant1.png");}
	Default
		{Height 8;}
	States
	{
	Spawn:
		HLI1 A 1 A_CheckRangeRev(radius+30,"Shrink");
		Loop;
	Shrink:
		HLI1 A 1 {scale.y=.8;}
		HLI1 A 1 A_CheckRange(radius+30,"Grow");
		Wait;
	Grow:
		HLI1 A 1 {scale.y=1;}
		Goto Spawn;
	}
	state A_CheckRangeRev(double distance,statelabel label,bool two_dimension=false)
		{return CheckRange(distance,two_dimension)?null:ResolveState(label);}
}

class Plant2 : Plant1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "plant2.md2", 0, "Models", "plant2.png");}
	Default
		{Radius 16;}
}

class StreetLamp : ModelBase
{
	override void Activate (Actor activator)
		{SetStateLabel("Active");}
	override void Deactivate (Actor activator)
		{SetStateLabel("Inactive");}
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "lamp1x.md3", 0, "Models", "lamp1x1.png");}
	Default
	{
		Radius 4;
		Height 180;
		YScale 1.5;
		+SOLID
	}
    States
    {
    Spawn:
    Active:
		HLI1 A -1 LIGHT("STREETLAMP") HLModelSetup();
		Loop;
    Inactive:
		HLI1 A -1 A_ChangeModel("ModelBase", 0, "Models", "lamp1x.md3", 0, "Models", "lamp1x3.png");
		Stop;
    }
}

class Glass01 : TankGlass
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "glass01.md3", 0, "Models", "glass01.png");}
	Default
	{
		Radius 16;
		Height 16;
		+NOGRAVITY
	}
}

class RKive : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "rkive.md3", 0, "Models", "rkive.png");}
	Default
	{
		Scale .8;
		Radius 8;
	}
}

class BookShelf1a : RKive
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "bookshelf1a.md3", 0, "Models", "bookshelf1.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (0, 24, 0);
		blockpos[1] = (0, -24, 0);
		blocksize[0] = (8, 64);
		blocksize[1] = (8, 64);
	}
	Default
		{Height 64;}
}

class BookShelf1b : BookShelf1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "bookshelf1b.md3", 0, "Models", "bookshelf1.png");}
}

class BookShelf2a : BookShelf1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "bookshelf2a.md3", 0, "Models", "bookshelf2.png");}
}

class BookShelf2b : BookShelf1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "bookshelf2b.md3", 0, "Models", "bookshelf2.png");}
}

class Credenza : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "credenza.md3", 0, "Models", "credenza.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (0, 32, 0);
		blockpos[1] = (0, -32, 0);
		blocksize[0] = (12, 30);
		blocksize[1] = (12, 30);
	}
	Default
	{
		Scale .68;
		Radius 12;
		Height 30;
	}
}

class CredenzaShort : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "credenzashort.md3", 0, "Models", "credenza.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (0, 20, 0);
		blockpos[1] = (0, -20, 0);
		blocksize[0] = (12, 30);
		blocksize[1] = (12, 30);
	}
	Default
	{
		Scale .68;
		Radius 12;
		Height 30;
	}
}

class Credenza2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "credenza2.md3", 0, "Models", "credenza2.png");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (0, 26, 0);
		blockpos[1] = (0, -26, 0);
		blocksize[0] = (12, 30);
		blocksize[1] = (12, 30);
	}
	Default
	{
		Scale .57;
		Radius 12;
		Height 30;
	}
}

class ConfTable : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "Conf_Table.md3", 0, "Models", "Conf_Table.jpg");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (0, 52, 0);
		blockpos[1] = (0, -52, 0);
		blocksize[0] = (8, 28);
		blocksize[1] = (8, 28);
	}
	Default
	{
		Scale .46;
		Radius 12;
		Height 28;
	}
}

class Ashtray : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "Ashtray.md3", 0, "Models", "Ashtray.jpg");}
	Default
	{
		Scale .7;
		Radius 2;
		Height 2;
	}
}

class AshtrayCig : Ashtray
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "Ashtray_Cig.md3", 0, "Models", "Ashtray.jpg");}
}

class Phone1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "Phone1.md3", 0, "Models", "Phones.jpg");}
	Default
	{
		Scale .25;
		Radius 4;
		Height 4;
	}
}

class Phone2 : Phone1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "Phone2.md3", 0, "Models", "Phones.jpg");}
	Default
		{Scale .2;}
}

class Phone3 : Phone1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "Phone3.md3", 0, "Models", "Phones.jpg");}
	Default
	{
		Scale .7;
		+NOGRAVITY
	}
}

class Rock01 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_a.md3", 0, "Models", "rock_big.jpg");}
	Default
	{
		Radius 24;
		Height 360;
	}
}

class Rock01a : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock01", 0, "Models", "rock_big_a.md3", 0, "Models", "rock_big2.jpg");}
}

class Rock01b : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock01", 0, "Models", "rock_big_a.md3", 0, "Models", "rock_moss1.jpg");}
}

class Rock01c : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock01", 0, "Models", "rock_big_a.md3", 0, "Models", "rock_moss2.jpg");}
}

class Rock02 : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_b.md3", 0, "Models", "rock_big.jpg");}
}

class Rock02a : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock02", 0, "Models", "rock_big_b.md3", 0, "Models", "rock_big2.jpg");}
}

class Rock02b : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock02", 0, "Models", "rock_big_b.md3", 0, "Models", "rock_moss1.jpg");}
}

class Rock02c : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock02", 0, "Models", "rock_big_b.md3", 0, "Models", "rock_moss2.jpg");}
}

class Rock02d : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_b.md3", 0, "Models", "xenrock1.png");}
}

class Rock02e : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_b.md3", 0, "Models", "xenrock2.png");}
}

class Rock02f : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_b.md3", 0, "Models", "xenrock3.png");}
	Default
	{
		Scale 1.25;
		Radius 60;
		Height 450;
	}
}

class Rock02g : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_b.md3", 0, "Models", "xenrock1.png");}
	Default
	{
		Scale 1.5;
		Radius 72;
		Height 476;
	}
}

class Rock03 : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_c.md3", 0, "Models", "rock_big.jpg");}
}

class Rock03a : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock03", 0, "Models", "rock_big_c.md3", 0, "Models", "rock_big2.jpg");}
}

class Rock03b : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock03", 0, "Models", "rock_big_c.md3", 0, "Models", "rock_moss1.jpg");}
}

class Rock03c : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("Rock03", 0, "Models", "rock_big_c.md3", 0, "Models", "rock_moss2.jpg");}
}

class Rock03d : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_c.md3", 0, "Models", "xenrock1.png");}
}

class Rock03e : Rock01
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_c.md3", 0, "Models", "xenrock2.png");}
}

class Rock03f : Rock02f
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_c.md3", 0, "Models", "xenrock3.png");}
}

class Rock03g : Rock02g
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_c.md3", 0, "Models", "xenrock3.png");}
}

class Rock04 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_big_d.md3", 0, "Models", "rock_big.jpg");}
	Default
	{
		Radius 48;
		Height 148;
	}
}

class Rock04a : Rock04
{
	override void HLModelSetup()
		{A_ChangeModel("Rock04", 0, "Models", "rock_big_d.md3", 0, "Models", "rock_big2.jpg");}
}

class Rock04b : Rock04
{
	override void HLModelSetup()
		{A_ChangeModel("Rock04", 0, "Models", "rock_big_d.md3", 0, "Models", "rock_moss1.jpg");}
}

class Rock04c : Rock04
{
	override void HLModelSetup()
		{A_ChangeModel("Rock04", 0, "Models", "rock_big_d.md3", 0, "Models", "rock_moss2.jpg");}
}

class Rock05 : Rock04
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "rock_small_a.md3", 0, "Models", "rock_big2.jpg");}
	Default
	{
		Height 100;
		Scale .125;
	}
}

class Rock05a : Rock05
{
	override void HLModelSetup()
		{A_ChangeModel("Rock05", 0, "Models", "rock_small_a.md3", 0, "Models", "rock_moss1.jpg");}
}

class Rock06 : Rock05
{
	override void HLModelSetup()
		{A_ChangeModel("Rock05", 0, "Models", "rock_small_b.md3", 0, "Models", "rock_big2.jpg");}
}

class Rock06a : Rock05
{
	override void HLModelSetup()
		{A_ChangeModel("Rock05", 0, "Models", "rock_small_b.md3", 0, "Models", "rock_moss1.jpg");}
}

class TechPillar1a : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "q4tech01.md3", 0, "Models", "q4tech1a.jpg");}
	override void BlockingSetup()
	{
		blockmax = 1;
		blockpos[0] = (22, 0, 56);
		blocksize[0] = (12, 160);
	}
	Default
	{
		Radius 16;
		Height 214;
	}
}

class TechPillar1b : TechPillar1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "q4tech01.md3", 0, "Models", "q4tech1b.jpg");}
}

class TechPillar1c : TechPillar1a
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "q4tech01.md3", 0, "Models", "q4tech1c.jpg");}
}

class TechPillar1aa : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "q4tech01.md3", 0, "Models", "q4tech1a.jpg");}
	override void BlockingSetup()
	{
		blockmax = 1;
		blockpos[0] = (22, 0, 56);
		blocksize[0] = (12, 48);
	}
	Default
	{
		Scale .75;
		Radius 12;
		Height 160;
	}
}

class TechPillar1bb : TechPillar1aa
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "q4tech01.md3", 0, "Models", "q4tech1b.jpg");}
}

class TechPillar1cc : TechPillar1aa
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "q4tech01.md3", 0, "Models", "q4tech1c.jpg");}
}

class TechPillar2 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "q4tech02.md3", 0, "Models", "q4tech02.jpg");}
	override void BlockingSetup()
	{
		blockmax = 4;
		blockpos[0] = (22, 0, 56);
		blockpos[1] = (48, 0, 88);
		blockpos[2] = (80, 0, 144);
		blockpos[3] = (112, 0, 140);
		blocksize[0] = (12, 128);
		blocksize[1] = (12, 96);
		blocksize[2] = (10, 28);
		blocksize[3] = (10, 32);
	}
	Default
	{
		Radius 16;
		Height 188;
	}
}

class TechClamp : ModelFloat
{
	override void HLModelSetup()
		{A_ChangeModel("TechClamp", 0, "Models", "q4tech03.md3", 0, "Models", "q4tech03.jpg");}
	Default
	{
		Radius 96;
		Height 256;
		+SPAWNCEILING
	}
}

class TechClampa : TechClamp
{
	Default
	{
		Scale .5;
		Radius 48;
		Height 128;
	}
}

class HoverPad : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("", 0, "Models", "hover.md3", 0, "Models", "hover.jpg");}
	Default
	{
		Scale 1.8;
		Radius 28;
		Height 1;
		-SOLID
	}
}

class PConsole : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "console.md3", 0, "Models", "console.png");}
	override void BlockingSetup()
	{
		blockmax = 5;
		blockpos[0] = (0, 32, 12);
		blockpos[1] = (0, -32, 12);
		blockpos[2] = (-24, 0, 0);
		blockpos[3] = (-24, 32, 0);
		blockpos[4] = (-24, -32, 0);
		blocksize[0] = (12, 16);
		blocksize[1] = (12, 16);
		blocksize[2] = (4, 56);
		blocksize[3] = (4, 56);
		blocksize[4] = (4, 56);
	}
	Default
	{
		Radius 12;
		Height 32;
		Scale 2.2;
	}
}

class PConsole1 : PConsole
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "console.md3", 0, "Models", "console1.png");}
}

class PConsole2 : PConsole
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "console.md3", 0, "Models", "console2.png");}
}

class PConsole3 : PConsole
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "console.md3", 0, "Models", "console3.png");}
}

class PConsole4 : PConsole
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "console.md3", 0, "Models", "console4.png");}
}

class PConsole5 : PConsole
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "consolebroke.md3", 0, "Models", "consolebroke.png");}
}

//======================================
// Concrete Jersey Barriers:
// Spawning will require rising sectors
// or invisible bridge things
//======================================

class Barrier1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_barrier1.md3", 0, "Models", "br_concrete1.jpg");}
	override void BlockingSetup()
	{
		blockmax = 2;
		blockpos[0] = (20, 0, 0);
		blockpos[1] = (-20, 0, 0);
		blocksize[0] = (4, 36);
		blocksize[1] = (4, 36);
	}
	Default
	{
		Scale 1.8;
		Radius 4;
		Height 36;
	}
}

class Barrier2 : Barrier1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_barrier1.md3", 0, "Models", "br_concrete2.jpg");}
}

class Barrier3 : Barrier1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_barrier1.md3", 0, "Models", "br_concrete4.jpg");}
}

//============================
// Explosive barrels & crates
//============================

class ExplosiveItemBangCrate : Actor
{
	Default
	{
		Scale .6;
		Radius 4;
		Height 4;
		RenderStyle "Translucent";
		Alpha .9;
		+NOINTERACTION
	}
	States
	{
	Spawn:
		CBNG ABC 2 BRIGHT LIGHT("CRATE_X2");
		CBNG DEFGH 2 BRIGHT LIGHT("CRATE_X1");
		CBNG IJKL 2 BRIGHT LIGHT("CRATE_X2");
		CBNG MNOP 2 BRIGHT LIGHT("CRATE_X3");
		CBNG QRS 2 BRIGHT LIGHT("CRATE_X4");
		CBNG TU 2;
		Stop;
	}
}

class ExplosiveItemBangBarrel : ExplosiveItemBangCrate
{
	Default
		{Scale .4;}
	States
	{
	Spawn:
		CBNG ABC 2 BRIGHT LIGHT("BARREL_X2");
		CBNG DEFGH 2 BRIGHT LIGHT("BARREL_X1");
		CBNG IJKL 2 BRIGHT LIGHT("BARREL_X2");
		CBNG MNOP 2 BRIGHT LIGHT("BARREL_X3");
		CBNG QRS 2 BRIGHT LIGHT("BARREL_X4");
		CBNG TU 2;
		Stop;
	}
}

class Xbarrel1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "nbarrel1.md3", 0, "Models", "nbarrel1.png");}
	Default
	{
		Health 50;
		Radius 12;
		Height 32;
		DeathSound "world/barrelx";
		Obituary "%o stood too close to an exploding barrel.";
		+PUSHABLE
		+SHOOTABLE
		+NOBLOOD
	}
	States
	{
	Death:
		HLI1 B 0 A_SpawnItemEx("ExplosiveItemBangBarrel");
		HLI1 B 2 A_AlertMonsters;
		HLI1 C 2 A_Scream;
		HLI1 D 1 A_Explode;
		HLI1 D 1 A_SetRenderStyle(.5,STYLE_Translucent);
		HLI1 EE 1 A_FadeOut;
		HLI1 F 2 A_NoBlocking;
		HLI1 GG 1 A_FadeOut;
		Stop;
	}
}

class Xbarrel2 : Xbarrel1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "nbarrel1.md3", 0, "Models", "nbarrel2.png");}
	Default
		{Health 20;}
}

class Xbarrel3 : Xbarrel1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "nbarrel1.md3", 0, "Models", "nbarrel3.png");}
	Default
		{Health 30;}
}

class Xcrate01 : Xbarrel3
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xcrate01.md3", 0, "Models", "xcrate01.png");}
	Default
	{
		-PUSHABLE
		Radius 32;
		Height 64;
		Mass 200;
		Obituary "%o stood too close to an exploding crate.";
	}
	States
	{
	Death:
		HLI1 B 0 A_SpawnItemEx("ExplosiveItemBangCrate");
		Goto Super::Death+1;
	}
}

class Xcrate02 : Xcrate01
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xcrate01.md3", 0, "Models", "xcrate02.png");}
}

//================================================================
// Non-Explosive barrels/trashcan (plastic & heavy metal), crates
//================================================================

class Trashcan1 : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "trashcan.md2", 0, "Models", "trashcan.png");}
	Default
	{
		Radius 10;
		Height 29;
		Mass 50;
		+PUSHABLE
		+SHOOTABLE
		+NOBLOOD
		+NOTAUTOAIMED
		+NODAMAGE
	}
}

class Barrel1 : Trashcan1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_barrel1.md3", 0, "Models", "br_barrell.jpg");}
	Default
	{
		Scale 2;
		Radius 8;
	}
}

class Barrel2 : Barrel1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "br_barrel2.md3", 0, "Models", "br_barrell.jpg");}
}

class Barrel3 : Barrel1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "utbarrel.md2", 0, "Models", "utbarrel.png");}
	Default
	{
		Scale .3;
		Radius 9;
		Mass 200;
	}
}

class Xcrate03 : Trashcan1
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xcrate01.md3", 0, "Models", "xcrate03.png");}
	Default
	{
		Health 30;
		Radius 32;
		Height 64;
		Mass 200;
	}
}

class Xcrate04 : Xcrate03
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "xcrate01.md3", 0, "Models", "xcrate04.png");}
}

class XMetalBox : ModelFloat
{
	override void ModelHeightSetup()
	{
        let defaultScaley  = GetDefaultByType(GetClass()).Scale.y;
		Scale.y = defaultScaley / ModelHeightMul;
	}
	override void HLModelSetup()
		{A_ChangeModel("XMetalBox", 0, "Models", "xcrate01.md3", 0, "Models", "xmetalbox.png");}
	Default
	{
		Radius 34;
		Height 64;
	}
}

class XMetalBox1 : XMetalBox
{
	Default
	{
		Scale 4.0;
		Radius 136;
		Height 256;
	}
}

//============================================
// Non-Player Character Models: Controller,
// Administrator
//============================================

class HintMan : ModelBase
{
	override void HLModelSetup()
		{A_ChangeModel("ModelBase", 0, "Models", "military.md2", 0, "Models", "euro2.png");}
	Default
	{
		Height 56;
		Scale 1.55;
	}
	States
	{
	Spawn:
		HLI1 A -1;
		Stop;
	Sit:
		HLI1 B -1 A_SetScale(scale.x*.9);
		Stop;
	}
}

class HintManSitting : RandomSpawner
{
	Default
		{DropItem "HintMan";}
	override void PostSpawn(Actor spawned)
	{
		spawned.bNOCLIP=1;
		spawned.SetStateLabel("Sit");
	}
}

class Admin01 : ModelBase
{
	override void HLModelSetup()
	{
		static const name modelskin[]=
		{
			'wheelchair_sci_000.png',
			'wheelchair_sci_001.png',
			'wheelchair_sci_002.png',
			'wheelchair_sci_003.png',
			'wheelchair_sci_004.png',
			'wheelchair_sci_005.png',
			'wheelchair_sci_006.png',
			'wheelchair_sci_007.png',
			'wheelchair_sci_008.png',
			'wheelchair_sci_009.png',
			'wheelchair_sci_010.png',
			'wheelchair_sci_011.png',
			'wheelchair_sci_012.png',
			'wheelchair_sci_013.png'
		};
		for(int i = 0; i <= 13; i++)
			A_ChangeModel("", 0, "Models", "wheelchair_sci.iqm", i, "Models", modelskin[i], CMDL_USESURFACESKIN);
	}
	Default
	{
		Radius 22;
		Height 40;
		+DECOUPLEDANIMATIONS
	}
	States
	{
	Spawn:
		HLI1 A -1 NODELAY SetAnimation('idle', 20, flags: SAF_LOOP|SAF_NOOVERRIDE);
		Stop;
	}
}